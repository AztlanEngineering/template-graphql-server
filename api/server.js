!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=192)}([function(e,t){e.exports=require("sequelize")},function(e,t){e.exports=require("chai")},function(e,t){e.exports=require("faker")},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"c",(function(){return s})),n.d(t,"g",(function(){return i})),n.d(t,"e",(function(){return o})),n.d(t,"f",(function(){return l})),n.d(t,"b",(function(){return p})),n.d(t,"d",(function(){return y}));var a=n(24),r=Object(a.createError)("ConfigurationError",{message:"There is a problem with the current software configuration."});Object(a.createError)("NotUniqueError",{message:"One of the required fields should be unique"});Object(a.createError)("ObjectNotFoundError",{message:"Object not found",options:{showPath:!1,showLocations:!1}});var s=Object(a.createError)("ValidationError",{message:"The provided data is not valid."});n(119);var i=function(e,t){return e},o=e=>null==e||"object"==typeof e&&0===Object.keys(e).length||"string"==typeof e&&0===e.trim().length;var l=e=>{let t="";for(;t.length<e;)t+=Math.random().toString(36).substring(2,15);return t.substring(0,e)},d=n(187),c=n.n(d),u=n(188);var p=class{constructor({service:e="gmail",...t}){this.service=e,this.props={clientId:process.env.UTILS_EMAIL_GOOGLE_OAUTH2_CLIENT_ID,clientSecret:process.env.UTILS_EMAIL_GOOGLE_OAUTH2_CLIENT_SECRET,refreshToken:process.env.UTILS_EMAIL_GOOGLE_OAUTH2_REFRESH_TOKEN,user:process.env.UTILS_EMAIL_DEFAULT_SENDER,sender:process.env.UTILS_EMAIL_DEFAULT_SENDER},this.props={...this.props,...t}}getTransport(){return this.smtpTransport=c.a.createTransport({service:this.service,auth:{type:"OAuth2",user:this.props.user,clientId:this.props.clientId,clientSecret:this.props.clientSecret,refreshToken:this.props.refreshToken,accessToken:this.props.accessToken||this.accessToken}}),this.smtpTransport}getGoogleAccessToken(){return this.oauth2Client=new u.google.OAuth2(this.props.clientId,this.props.clientSecret,"https://developers.google.com/oauthplayground"),this.oauth2Client.setCredentials(),this.accessToken=this.oauth2Client.getAccessToken(),this.accessToken}async send(e=!1){this.props.accessToken||"gmail"===this.provider&&this.getGoogleAccessToken();const t=this.getTransport(),n={from:this.props.sender,to:this.props.to,subject:this.props.subject,text:this.props.text,html:this.props.content};return e?{accepted:[""+this.props.sender],response:"250 2.0.0 OK  "+Math.trunc(Date.now()/1e3)}:await t.sendMail(n)}},y=(e,t={})=>{const n=e(),a={};return Object.keys(n).forEach(e=>{a[e]=e in t?t[e]:n[e]}),{...t,...a}}},function(e,t,n){"use strict";n.r(t),n.d(t,"getModel",(function(){return l}));var a=n(140),r=n(25),s=n.n(r);"true"===process.env.DEBUG&&console.log("LOADING => ORM Models from :",s.a.installedApps);var i={};const o={};s.a.installedApps.forEach(e=>{try{const t=n(195)(`./${e}/models`);t&&(i={...i,...t})}catch(t){console.log("WARNING => No models found for package "+e)}}),Object.keys(i).forEach(e=>{o[e]=i[e](a.a)}),Object.keys(o).forEach(e=>{"associate"in o[e]&&o[e].associate(o)}),"true"===process.env.DEBUG&&console.log(`OK => ${Object.keys(o).length} models loaded :`,Object.keys(o));t.default=o;const l=()=>({})},function(e,t,n){"use strict";n.r(t);var a=n(84);n.d(t,"generateTestPage",(function(){return a.default}));var r=n(85);n.d(t,"generateTestSite",(function(){return r.default}));var s=n(86);n.d(t,"generateTestDomain",(function(){return s.default}))},function(e,t,n){"use strict";n.r(t);var a=n(115);n.d(t,"DomainController",(function(){return a.default}));var r=n(116);n.d(t,"SiteController",(function(){return r.default}));var s=n(117);n.d(t,"PageController",(function(){return s.default}))},function(e,t,n){"use strict";n.r(t);var a=n(74);n.d(t,"UserController",(function(){return a.default}));var r=n(77);n.d(t,"TokenController",(function(){return r.default}))},function(e,t,n){"use strict";n.r(t);var a=n(95);n.d(t,"ExpressionController",(function(){return a.default}));var r=n(96);n.d(t,"AuthorController",(function(){return r.default}));var s=n(97);n.d(t,"TagController",(function(){return s.default}))},function(e,t,n){"use strict";n.r(t);var a=n(78);n.d(t,"generateTestToken",(function(){return a.default}));var r=n(79);n.d(t,"generateTestUser",(function(){return r.default}))},function(e,t,n){"use strict";n.r(t);var a=n(98);n.d(t,"generateTestAuthor",(function(){return a.default}));var r=n(99);n.d(t,"generateTestExpression",(function(){return r.default}));var s=n(100);n.d(t,"generateTestTag",(function(){return s.default}))},function(e,t,n){"use strict";n.r(t);var a=n(69);n.d(t,"VercelAPI",(function(){return a.default}))},function(e,t,n){"use strict";n.r(t);var a=n(89);n.d(t,"ServiceController",(function(){return a.default}));var r=n(90);n.d(t,"MakeController",(function(){return r.default}))},function(e,t,n){"use strict";n.r(t);var a=n(110);n.d(t,"generateTestSetter",(function(){return a.default}))},function(e,t,n){"use strict";n.r(t);var a=n(108);n.d(t,"OAuth2SetterController",(function(){return a.default}))},function(e,t,n){"use strict";n.r(t);var a=n(82);n.d(t,"ShopController",(function(){return a.default}))},function(e,t,n){"use strict";n.r(t);var a=n(91);n.d(t,"generateTestMake",(function(){return a.default}));var r=n(92);n.d(t,"generateTestService",(function(){return r.default}))},function(e,t,n){"use strict";n.r(t);var a=n(83);n.d(t,"generateTestShop",(function(){return a.default}))},function(e,t){e.exports=require("validator")},function(e,t){e.exports=require("chai-as-promised")},function(e,t,n){"use strict";n.r(t);var a=n(101),r=n.n(a);n.d(t,"FruitController",(function(){return r.a}))},function(e,t,n){"use strict";n.r(t);var a=n(103);n.d(t,"generateTestFruit",(function(){return a.default}))},function(e,t){e.exports=require("request-promise")},function(e,t,n){"use strict";n.r(t);var a=n(45);n.d(t,"AccessManager",(function(){return a.default}));var r=n(39);n.d(t,"GoogleAccessManager",(function(){return r.GoogleAccessManager}))},function(e,t){e.exports=require("apollo-errors")},function(e,t){e.exports={installedApps:["auth","oauth2","car","dictionary","website","business","food","tstr"]}},function(e,t,n){"use strict";n.r(t);var a=n(68);n.d(t,"Domain",(function(){return a.default}));var r=n(70);n.d(t,"Site",(function(){return r.default}));var s=n(71);n.d(t,"Page",(function(){return s.default}))},function(e,t,n){"use strict";n.r(t);var a=n(75);n.d(t,"validateLoginInput",(function(){return a.default}));var r=n(76);n.d(t,"validateSignupInput",(function(){return r.default}))},function(e,t){e.exports=require("bcrypt")},function(e,t,n){"use strict";n.r(t);t.default=["type Token {\n  id:ID!\n  _string:String!\n  token: String!\n  maxAge: String!\n  tokenType:String\n\n  expires_in:Float! #Based on maxAge and Date.now\n  access_token:String! #same as token\n  token_type:String #same as tokenType\n}\n\n","extend type Query {\n \tallUsers: [User]!\n \tgetUser(id:ID!): User!\n \tme: MinUser\n  hello: String!\n}\n\nextend type Mutation {\n  #Admin Mutations\n \taddUser(input:UserInput): User!,\n \tupdateUser(id: ID!, input:UserInput): User!,\n \tdeleteUser(id: ID!): ID!,\n \tsetSuperuser(id: ID!, value: String!): Boolean!,\n \tsetUserPassword(id: ID!, value: String!): Boolean!,\n\n  #User Mutations\n \tlogin(input: UserLogin): Token!,\n  signup(input: UserInput): Token!,\n \tsetMyPassword(oldPassword:String, password: String!): Boolean!,\n \tupdateMe(input:MeInput): User!,\n}\n\ninput UserInput {\n  firstName: String\n  lastName: String\n  email: String\n  username: String\n  password: String\n  superuser: Boolean\n  operator: Boolean\n  handle: String\n  profilePicture: String\n  isActive:Boolean\n}\n\ninput MeInput {\n  firstName: String\n  lastName: String\n  email: String\n  username: String\n  password: String\n  handle: String\n  profilePicture: String\n}\n\ninput UserLogin {\n  email: String!\n  password:String!\n}\n\ntype User {\n \tid: ID\n \tfirstName: String\n \tlastName: String\n \temail: String\n  username: String\n  superuser: Boolean\n  operator: Boolean\n  password: String\n  handle: String\n  isActive:Boolean\n  onboardingStatus:Int\n  createdAt:Float\n  updatedAt:Float\n}\n\ntype MinUser {\n \tid: ID\n  email:String\n \tfirstName: String\n \tlastName: String\n  username: String\n  handle: String\n  isActive:Boolean\n  onboardingStatus:Int\n  createdAt:Float\n  updatedAt:Float\n}\n\n","#extend input TokenInput {\n  #userId:ID\n  #}\n\nextend type Token {\n  userId:ID\n  user:User\n}\n\nextend type User {\n  tokens:Token\n}\n\n#extend type TokenInput {\n#  userId:ID!\n#}\n"]},function(e,t,n){"use strict";n.r(t);n(138);var a=n(121);t.default=[a.default]},function(e,t,n){"use strict";n.r(t);t.default=["# @fwrlines/generator-graphql-server-type 2.4.5 \nextend type Query {\n  allShops: [Shop]\n  getShop(id: ID!): Shop!\n  #paginatedShop (page:Int, category: String):PaginatedShops\n}\n\nextend type Mutation {\n  #Admin mutations\n  addShop(input:ShopInput!): Shop!\n  updateShop(id: ID!, input: ShopInput!): Shop!\n  deleteShop(id: ID!): ID!\n\n  #User mutations\n  }\n\ninput ShopInput {\n  name:String\n  slug:String\n  publicPhoneNumber:Float\n  privatePhoneNumber:Float\n  address:String\n  address2:String\n  city:String\n  postcode:String\n  country:String\n  #regularOpeningTimes:String\n  #specialOpeningTimes:String\n  #data:String\n  }\n\ntype Shop {\n  id:ID!\n  _string:String!\n  name:String!\n  slug:String!\n  publicPhoneNumber:Float\n  privatePhoneNumber:Float\n  address:String\n  address2:String\n  city:String!\n  postcode:String!\n  country:String!\n  #regularOpeningTimes:String\n  #specialOpeningTimes:String\n  #data:String\n  createdAt:Float!\n  updatedAt:Float!\n}\n\n#type PaginatedShops {\n#  docs: [Shop]\n#  totalDocs: Int!\n#  limit: Int!\n#  hasPrevPage: Boolean!\n#  hasNextPage: Boolean!\n#  page: Int!\n#  totalPages: Int!\n#  pagingCounter: Int!\n#  prevPage: Int\n#  nextPage: Int\n#}\n","extend type User {\n  shops:Shop\n}\n\nextend type Shop {\n  ownerId:ID!\n  owner:MinUser\n}\n"]},function(e,t,n){"use strict";n.r(t);var a=n(122);t.default=[a.default]},function(e,t,n){"use strict";n.r(t);t.default=["# @fwrlines/generator-graphql-server-type 1.3.1 \nextend type Query {\n  allServices: [Service]\n  getService(id: ID!): Service!\n  #paginatedService (page:Int, category: String):PaginatedServices\n}\n\nextend type Mutation {\n  addService(input:ServiceInput!): Service!\n  updateService(id: ID!, input: ServiceInput!): Boolean!\n  deleteService(id: ID!): ID!\n  }\n\ninput ServiceInput {\n  name:String\n  slug:String\n  category:String\n  is_active:Boolean\n  car:Boolean\n  motorcycle:Boolean\n  generic_cta:String\n  carbutton:String\n  motobutton:String\n  seotext:String\n}\n\ntype Service {\n  id:ID\n  _string:String!\n  name:String\n  slug:String\n  category:String\n  is_active:Boolean\n  car:Boolean\n  motorcycle:Boolean\n  generic_cta:String\n  carbutton:String\n  motobutton:String\n  seotext:String\n}\n\n#type PaginatedServices {\n#  docs: [Service]\n#  totalDocs: Int!\n#  limit: Int!\n#  hasPrevPage: Boolean!\n#  hasNextPage: Boolean!\n#  page: Int!\n#  totalPages: Int!\n#  pagingCounter: Int!\n#  prevPage: Int\n#  nextPage: Int\n#}\n","# @fwrlines/generator-graphql-server-type 1.3.1 \nextend type Query {\n  allMakes: [Make]\n  getMake(id: ID!): Make!\n  #paginatedMake (page:Int, category: String):PaginatedMakes\n}\n\nextend type Mutation {\n  addMake(input:MakeInput!): Make!\n  updateMake(id: ID!, input: MakeInput!): Make!\n  deleteMake(id: ID!): ID!\n  }\n\ninput MakeInput {\n  name:String\n  slug:String\n  active_from:String\n  active_to:String\n  country:String\n  is_common:Boolean\n  is_active:Boolean\n  car:Boolean\n  motorcycle:Boolean\n  seotext:String\n  }\n\ntype Make {\n  id:ID!\n  _string:String!\n  name:String\n  slug:String\n  active_from:String\n  active_to:String\n  country:String\n  is_common:Boolean\n  is_active:Boolean\n  car:Boolean\n  motorcycle:Boolean\n  seotext:String\n  createdAt:Float\n  updatedAt:Float\n}\n\n#type PaginatedMakes {\n#  docs: [Make]\n#  totalDocs: Int!\n#  limit: Int!\n#  hasPrevPage: Boolean!\n#  hasNextPage: Boolean!\n#  page: Int!\n#  totalPages: Int!\n#  pagingCounter: Int!\n#  prevPage: Int\n#  nextPage: Int\n#}\n",""]},function(e,t,n){"use strict";n.r(t);var a=n(123),r=n(124);t.default=[a.default,r.default]},function(e,t,n){"use strict";n.r(t);t.default=["# @fwrlines/generator-graphql-server-type 2.4.6 \nextend type Query {\n  allDictionaryTags: [DictionaryTag]\n  getDictionaryTag(id: ID!): DictionaryTag!\n  #paginatedDictionaryTag (page:Int, category: String):PaginatedDictionaryTags\n}\n\nextend type Mutation {\n  #Admin mutations\n  addDictionaryTag(input:DictionaryTagInput!): DictionaryTag!\n  updateDictionaryTag(id: ID!, input: DictionaryTagInput!): DictionaryTag!\n  deleteDictionaryTag(id: ID!): ID!\n\n  #User mutations\n  }\n\ninput DictionaryTagInput {\n  name:String\n  slug:String\n}\n\ntype DictionaryTag {\n  id:ID!\n  _string:String!\n  name:String!\n  slug:String!\n  #data:String\n  createdAt:Float!\n  updatedAt:Float!\n}\n\n#type PaginatedDictionaryTags {\n#  docs: [DictionaryTag]\n#  totalDocs: Int!\n#  limit: Int!\n#  hasPrevPage: Boolean!\n#  hasNextPage: Boolean!\n#  page: Int!\n#  totalPages: Int!\n#  pagingCounter: Int!\n#  prevPage: Int\n#  nextPage: Int\n#}\n","# @fwrlines/generator-graphql-server-type 2.4.6 \nextend type Query {\n  allDictionaryAuthors: [DictionaryAuthor]\n  getDictionaryAuthor(id: ID!): DictionaryAuthor!\n  #paginatedDictionaryAuthor (page:Int, category: String):PaginatedDictionaryAuthors\n}\n\nextend type Mutation {\n  #Admin mutations\n  addDictionaryAuthor(input:DictionaryAuthorInput!): DictionaryAuthor!\n  updateDictionaryAuthor(id: ID!, input: DictionaryAuthorInput!): DictionaryAuthor!\n  deleteDictionaryAuthor(id: ID!): ID!\n\n  #User mutations\n  }\n\ninput DictionaryAuthorInput {\n  name:String\n  slug:String\n  altName:String\n  publicPicture:String\n  authorityLink:String\n  publicLink:String\n  description:String\n  #data:String\n  }\n\ntype DictionaryAuthor {\n  id:ID!\n  _string:String!\n  name:String!\n  slug:String!\n  altName:String\n  publicPicture:String\n  authorityLink:String\n  publicLink:String\n  description:String\n  #data:String\n  createdAt:Float!\n  updatedAt:Float!\n}\n\n#type PaginatedDictionaryAuthors {\n#  docs: [DictionaryAuthor]\n#  totalDocs: Int!\n#  limit: Int!\n#  hasPrevPage: Boolean!\n#  hasNextPage: Boolean!\n#  page: Int!\n#  totalPages: Int!\n#  pagingCounter: Int!\n#  prevPage: Int\n#  nextPage: Int\n#}\n","# @fwrlines/generator-graphql-server-type 2.4.6 \nextend type Query {\n  allDictionaryExpressions: [DictionaryExpression]\n  getDictionaryExpression(id: ID!): DictionaryExpression!\n  #paginatedDictionaryExpression (page:Int, category: String):PaginatedDictionaryExpressions\n}\n\nextend type Mutation {\n  #Admin mutations\n  addDictionaryExpression(input:DictionaryExpressionInput!): DictionaryExpression!\n  updateDictionaryExpression(id: ID!, input: DictionaryExpressionInput!): DictionaryExpression!\n  deleteDictionaryExpression(id: ID!): ID!\n\n  #User mutations\n  }\n\ninput DictionaryExpressionInput {\n  name:String\n  slug:String\n  sourceName:String\n  sourceLink:String\n  date:Float\n  location:String\n  attributed:String\n  definition:String\n  usage:String\n  isActive:Boolean\n  #data:String\n  }\n\ntype DictionaryExpression {\n  id:ID!\n  _string:String!\n  name:String!\n  slug:String!\n  sourceName:String\n  sourceLink:String\n  date:Float\n  location:String\n  attributed:String\n  definition:String\n  usage:String\n  isActive:Boolean!\n  #data:String\n  createdAt:Float!\n  updatedAt:Float!\n}\n\n#type PaginatedDictionaryExpressions {\n#  docs: [DictionaryExpression]\n#  totalDocs: Int!\n#  limit: Int!\n#  hasPrevPage: Boolean!\n#  hasNextPage: Boolean!\n#  page: Int!\n#  totalPages: Int!\n#  pagingCounter: Int!\n#  prevPage: Int\n#  nextPage: Int\n#}\n","extend input DictionaryExpressionInput {\n  authorId:ID\n}\n\nextend type DictionaryExpression {\n  authorId:ID\n  author:DictionaryAuthor\n}\n\nextend type DictionaryAuthor {\n  expressions:[DictionaryExpression]\n}\n"]},function(e,t,n){"use strict";n.r(t);var a=n(125),r=n(126),s=n(127);t.default=[a.default,r.default,s.default]},function(e,t,n){"use strict";n.r(t);t.default=["# Generator version : 1.1.2\nextend type Query {\n  oAuth2Google: String!\n}\n\nextend type Mutation {\n  oAuth2Login(authorization_code:String): Token!\n}\n","# Generator version : 1.1.1\nextend type Query {\n  allSetters: [Setter]\n  getSetter: Setter!\n  #paginatedSetter (page:Int, category: String):PaginatedSetters\n}\n\nextend type Mutation {\n  addSetter(input:SetterInput!): Setter!\n  updateSetter(id: ID!, input: SetterInput!): Setter!\n  deleteSetter(id: ID!): ID!\n  }\n\ninput SetterInput {\n  expires:Float\n  useToLogin:Boolean\n  code:String\n  provider:String\n  isValid:Boolean\n  }\n\ntype Setter {\n  id:ID!\n  _string:String!\n  expires:Float\n  useToLogin:Boolean!\n  code:String!\n  provider:String!\n  isValid:Boolean!\n  createdAt:Float!\n  updatedAt:Float!\n}\n\n#type PaginatedSetters {\n#  docs: [Setter]\n#  totalDocs: Int!\n#  limit: Int!\n#  hasPrevPage: Boolean!\n#  hasNextPage: Boolean!\n#  page: Int!\n#  totalPages: Int!\n#  pagingCounter: Int!\n#  prevPage: Int\n#  nextPage: Int\n#}\n","extend input SetterInput {\n  userId:ID\n}\n\nextend type Setter {\n  userId:ID\n  user:MinUser\n}\n\nextend type User {\n  oAuth2Setters:Setter \n}\n\ntype OAuth2Profile {\n  id: ID!\n  #refreshToken:pdrivate\n  picture: String\n  provider: String \n  scope: String\n  locale: String\n  name: String\n  email: String\n  emailVerified: Boolean\n  createdAt:Float\n  updatedAt:Float\n  #scope:private\n}\n\nextend type MinUser {\n  oAuth2Profiles:[OAuth2Profile]\n}\n\nextend type User {\n  oAuth2Profiles:[OAuth2Profile]\n}\n"]},function(e,t,n){"use strict";n.r(t);var a=n(129),r=n(131);t.default=[a.default,r.default]},function(e,t,n){"use strict";n.r(t);var a=n(107);n.d(t,"GoogleAccessManager",(function(){return a.default}))},function(e,t,n){"use strict";n.r(t);t.default=["# Generator version : 1.1.1\nextend type Query {\n  getSimpleHello: String\n  getHello: Hello\n  time:Float\n}\n\n#extend type Mutation {\n  #mutateHello(id: ID!, input: HelloInput!): Hello!\n  # }\n\n#input HelloInput {\n  #y:String\n# }\n\ntype Hello {\n  y:String\n}\n",""]},function(e,t,n){"use strict";n.r(t);var a=n(133);t.default=[a.default]},function(e,t,n){"use strict";n.r(t);t.default=["# @fwrlines/generator-graphql-server-type 2.1.1 \nextend type Query {\n  allPages: [Page]\n  getPage(id: ID!): Page!\n  #paginatedPage (page:Int, category: String):PaginatedPages\n}\n\nextend type Mutation {\n  #Admin mutations\n  addPage(input:PageInput!): Page!\n  updatePage(id: ID!, input: PageInput!): Page!\n  deletePage(id: ID!): ID!\n\n  #User mutations\n  }\n\ninput PageInput {\n  name:String\n  slug:String\n  }\n\ntype Page {\n  id:ID!\n  _string:String!\n  name:String!\n  slug:String!\n  #metadata:String\n  #data:String\n  createdAt:Float!\n  updatedAt:Float!\n}\n\n#type PaginatedPages {\n#  docs: [Page]\n#  totalDocs: Int!\n#  limit: Int!\n#  hasPrevPage: Boolean!\n#  hasNextPage: Boolean!\n#  page: Int!\n#  totalPages: Int!\n#  pagingCounter: Int!\n#  prevPage: Int\n#  nextPage: Int\n#}\n","# @fwrlines/generator-graphql-server-type 2.1.1 \nextend type Query {\n  allSites: [Site]\n  getSite(id: ID!): Site!\n  #paginatedSite (page:Int, category: String):PaginatedSites\n}\n\nextend type Mutation {\n  #Admin mutations\n  addSite(input:SiteInput!): Site!\n  updateSite(id: ID!, input: SiteInput!): Site!\n  deleteSite(id: ID!): ID!\n\n  #User mutations\n  }\n\ninput SiteInput {\n  name:String\n  }\n\ntype Site {\n  id:ID!\n  _string:String!\n  name:String!\n  #Data:String\n  createdAt:Float!\n  updatedAt:Float!\n}\n\n#type PaginatedSites {\n#  docs: [Site]\n#  totalDocs: Int!\n#  limit: Int!\n#  hasPrevPage: Boolean!\n#  hasNextPage: Boolean!\n#  page: Int!\n#  totalPages: Int!\n#  pagingCounter: Int!\n#  prevPage: Int\n#  nextPage: Int\n#}\n","# @fwrlines/generator-graphql-server-type 2.1.1 \nextend type Query {\n  allDomains: [Domain]\n  getDomain(id: ID!): Domain!\n  #paginatedDomain (page:Int, category: String):PaginatedDomains\n}\n\nextend type Mutation {\n  #Admin mutations\n  addDomain(input:DomainInput!): Domain!\n  updateDomain(id: ID!, input: DomainInput!): Domain!\n  deleteDomain(id: ID!): ID!\n\n  #User mutations\n  }\n\ninput DomainInput {\n  name:String\n  slug:String\n  isOrdered:Boolean\n  isBought:Boolean\n  isInstalled:Boolean\n  isError:Boolean\n  vercelNameservers:[String]\n  vercelTeamId:String\n }\n\ntype Domain {\n  id:ID!\n  _string:String!\n  name:String!\n  slug:String!\n  isOrdered:Boolean!\n  isBought:Boolean!\n  isInstalled:Boolean!\n  isError:Boolean!\n  vercelNameservers:[String]\n  vercelTeamId:String\n  main:String!\n  isAddedToVercel:Boolean!\n  createdAt:Float!\n  updatedAt:Float!\n}\n\n#type PaginatedDomains {\n#  docs: [Domain]\n#  totalDocs: Int!\n#  limit: Int!\n#  hasPrevPage: Boolean!\n#  hasNextPage: Boolean!\n#  page: Int!\n#  totalPages: Int!\n#  pagingCounter: Int!\n#  prevPage: Int\n#  nextPage: Int\n#}\n","extend input SiteInput {\n  domainName:String\n}\n\nextend type Site {\n  domainName:String\n  domain:Domain\n}\n\nextend type Domain {\n  site:Site\n}\n\nextend input PageInput {\n  siteId:ID \n}\n\nextend type Page {\n  siteId:ID\n  website:Site\n}\n\nextend type Site {\n  pages:[Page]\n}\n"]},function(e,t,n){"use strict";n.r(t);var a=n(134),r=n(135),s=n(136);t.default=[a.default,r.default,s.default]},function(e,t,n){"use strict";n.r(t);var a=n(57);n.d(t,"getTokenFor",(function(){return a.default}))},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var a=n(22),r=n.n(a),s=n(55),i=n.n(s);const o=n(4).default.Setter;class l{constructor(e={},t={}){this.Config=e,this.context=t,this.data={}}async init(){const e=this.context.state;this.context.state&&(this.context.setter=await o.findOne({include:{all:!0},where:{code:e}}))}getAuthorizeParameters(e){return this.Config.getAuthorizeParameters(e)}getAuthorizationUri(e){const t=i.a.stringify(this.getAuthorizeParameters(e)).replace(/%2B/g,"+");return this.Config.service.authorizeFullPath+"?"+t}getTokensFromAuthCodeParameters(){const e=this.Config.service;return{grant_type:"authorization_code",code:this.context.authorizationCode,state:this.context.state,redirect_uri:e.authorizeRedirectUri,client_id:e.clientId,client_secret:e.clientSecret,scope:"object"==typeof e.scope?e.scope.join(" "):e.scope}}async redeemTokensFromAuthCode(){const e={method:"POST",uri:this.Config.endpoints.POST.getToken(),json:!0,body:this.getTokensFromAuthCodeParameters()},t=await r()(e).catch(e=>console.log("ERROR EXCHANGING THE TOKENS",e)),{access_token:n,refresh_token:a,token_type:s,id_token:i,scope:o}=t;return this.data={...this.data,token_type:s,id_token:i,access_token:n,refresh_token:a,scope:o},{access_token:n,refresh_token:a,scope:o,token_type:s}}async revokeToken(e){return await r()({method:"GET",url:this.Conf.endpoints.GET.revokeToken(e)})}}var d,c,u;d=l,c="strategy",u={signupAllowed:"true"===process.env.SIGNUP},c in d?Object.defineProperty(d,c,{value:u,enumerable:!0,configurable:!0,writable:!0}):d[c]=u},function(e,t,n){"use strict";n.r(t);var a=n(109);n.d(t,"GoogleAPI",(function(){return a.default}))},function(e,t){e.exports=require("jsonwebtoken")},function(e,t){e.exports=require("mongoose")},function(e,t,n){"use strict";n.r(t);var a=n(56);n.d(t,"User",(function(){return a.default}));var r=n(58);n.d(t,"Token",(function(){return r.default}))},function(e,t,n){"use strict";n.r(t);var a=n(59);n.d(t,"Shop",(function(){return a.default}))},function(e,t,n){"use strict";n.r(t);var a=n(60);n.d(t,"Service",(function(){return a.default}));var r=n(61);n.d(t,"Make",(function(){return r.default}))},function(e,t,n){"use strict";n.r(t);var a=n(62);n.d(t,"DictionaryExpression",(function(){return a.default}));var r=n(63);n.d(t,"DictionaryAuthor",(function(){return r.default}));var s=n(64);n.d(t,"DictionaryTag",(function(){return s.default}))},function(e,t,n){"use strict";n.r(t);var a=n(65);n.d(t,"Fruit",(function(){return a.default}))},function(e,t,n){"use strict";n.r(t);var a=n(66);n.d(t,"OAuth2Setter",(function(){return a.default}));var r=n(67);n.d(t,"OAuth2Profile",(function(){return r.default}))},function(e,t){e.exports=require("querystring")},function(e,t,n){"use strict";n.r(t);var a=n(0),r=n(28),s=n.n(r),i=n(44);t.default=e=>{class t extends a.Model{canLogIn(){return this.get("isActive")}async setPassword(e){return this.passwordHash=await s.a.hash(e,8),await this.save(),!0}async isPasswordValid(e){return await s.a.compare(e,this.passwordHash)}async getAuthToken(){return await Object(i.getTokenFor)(this)}}return t.init({id:{type:a.Sequelize.DataTypes.UUID,defaultValue:a.Sequelize.UUIDV4,allowNull:!1,primaryKey:!0},email:{type:a.Sequelize.DataTypes.STRING,unique:!0,validate:{isEmail:!0}},emailVerified:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!1},firstName:{type:a.Sequelize.DataTypes.STRING},lastName:{type:a.Sequelize.DataTypes.STRING},username:{type:a.Sequelize.DataTypes.STRING,unique:!0},handle:{type:a.Sequelize.DataTypes.STRING,unique:!0},superuser:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!1},isActive:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!1},passwordHash:{type:a.Sequelize.DataTypes.STRING},onboardingStatus:{type:a.Sequelize.DataTypes.INTEGER,defaultValue:0,allowNull:!1},_string:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["email"]),get:function(){return this.get("email")}}},{sequelize:e,modelName:"User",tableName:"users",updatedAt:"updatedAt",createdAt:"createdAt"}),t.associate=e=>{},t.addHook("beforeValidate","lowercaseEmail",(e,t)=>{e.email&&(e.email=e.email.toLowerCase())}),t}},function(e,t,n){"use strict";n.r(t);var a=n(3),r=n(47),s=n.n(r);const i=Promise.resolve().then(n.bind(null,4));t.default=async(e,t=process.env.JWT_SECRET)=>{if(!t)throw new a.a({message:"No jwt secret kei providedy"});const{default:n}=await i,r=n.Token,o={id:e.id,email:e.email,username:e.username},l=t,d=Number(process.env.AUTH_SESSION_DURATION),c=s.a.sign(o,l,{issuer:process.env.JWT_ISSUER||"Fwrlines",subject:"auth",audience:process.env.JWT_AUDIENCE||"fwrlines.com",expiresIn:d,algorithm:"HS512"});return await r.create({maxAge:d,userId:e.id,token:c})}},function(e,t,n){"use strict";n.r(t);var a=n(0);t.default=e=>{class t extends a.Model{}return t.init({id:{type:a.Sequelize.DataTypes.UUID,defaultValue:a.Sequelize.UUIDV4,allowNull:!1,primaryKey:!0},maxAge:{type:a.Sequelize.DataTypes.INTEGER,defaultValue:3600},token:{type:a.Sequelize.DataTypes.TEXT,allowNull:!1},tokenType:{type:a.Sequelize.DataTypes.STRING,defaultValue:"Bearer"},expires_in:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.BIGINT,["maxAge","createdAt"]),get:function(){const e=Number(this.get("createdAt"))+1e3*this.get("maxAge")-Number(Date.now());return Math.floor(Math.max(0,e/1e3))}},access_token:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.TEXT,["token"]),get:function(){return this.get("token")}},token_type:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["tokenType"]),get:function(){return this.get("tokenType")}},_string:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["token"]),get:function(){return this.get("token").slice(0,20)+"..."}}},{sequelize:e,modelName:"Token",tableName:"auth_tokens",updatedAt:"updatedAt",createdAt:"createdAt"}),t.associate=e=>{t.belongsTo(e.User,{as:"user",targetKey:"id",foreignKey:{name:"userId",type:a.Sequelize.DataTypes.UUID},onDelete:"CASCADE"}),e.User.hasMany(t,{as:"tokens",targetKey:"id",foreignKey:{name:"userId",type:a.Sequelize.DataTypes.UUID},onDelete:"CASCADE"})},t}},function(e,t,n){"use strict";n.r(t);var a=n(0);t.default=e=>{class t extends a.Model{async updateData(e){const t=this.data;return this.data={...t,...e},await this.save()}async updateRegularOpeningTimes(e){const t=this.data;return this.data={...t,...e},await this.save()}async updateSpecialOpeningTimes(e){const t=this.data;return this.data={...t,...e},await this.save()}}return t.init({id:{type:a.Sequelize.DataTypes.UUID,defaultValue:a.Sequelize.UUIDV4,primaryKey:!0,allowNull:!1},name:{type:a.Sequelize.DataTypes.STRING,allowNull:!1},slug:{type:a.Sequelize.DataTypes.STRING,allowNull:!1},publicPhoneNumber:{type:a.Sequelize.DataTypes.BIGINT},privatePhoneNumber:{type:a.Sequelize.DataTypes.BIGINT},address:{type:a.Sequelize.DataTypes.STRING},address2:{type:a.Sequelize.DataTypes.STRING},city:{type:a.Sequelize.DataTypes.STRING,allowNull:!1},postcode:{type:a.Sequelize.DataTypes.STRING,allowNull:!1},country:{type:a.Sequelize.DataTypes.STRING,allowNull:!1},regularOpeningTimes:{type:a.Sequelize.DataTypes.JSON,defaultValue:{1:!1,2:!1,3:!1,4:!1,5:!1,6:!1,7:!1}},specialOpeningTimes:{type:a.Sequelize.DataTypes.JSON,defaultValue:{}},data:{type:a.Sequelize.DataTypes.JSON,defaultValue:{}},closesAt:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.DATE,["regularOpeningTimes","specialOpeningTimes"]),get:()=>Date.now()},opensAt:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.DATE,["regularOpeningTimes","specialOpeningTimes"]),get:()=>Date.now()},isOpenNow:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.BOOLEAN,["closesAt","opensAt"]),get(){return this.get("closesAt")<this.get("opensAt")}},_string:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["city","name"]),get:function(){return`${this.get("city")}/${this.get("name")}`}}},{sequelize:e,modelName:"Shop",tableName:"business_shops",updatedAt:"updatedAt",createdAt:"createdAt",indexes:[{unique:!0,fields:["city","name"]}]}),t.associate=e=>{t.belongsTo(e.User,{as:"user",targetKey:"id",foreignKey:{name:"ownerId",type:a.Sequelize.DataTypes.UUID}}),e.User.hasMany(t,{targetKey:"id",as:"shops",foreignKey:{name:"ownerId",type:a.Sequelize.DataTypes.UUID}}),t.belongsTo(e.Site,{as:"website",targetKey:"id",foreignKey:{name:"siteId",type:a.Sequelize.DataTypes.UUID}}),e.Site.hasOne(t,{as:"business",targetKey:"id",foreignKey:{name:"siteId",type:a.Sequelize.DataTypes.UUID}})},t}},function(e,t,n){"use strict";n.r(t);var a=n(0);t.default=e=>{class t extends a.Model{}return t.init({id:{type:a.Sequelize.DataTypes.UUID,defaultValue:a.Sequelize.UUIDV4,allowNull:!1,primaryKey:!0},name:{type:a.Sequelize.DataTypes.STRING,allowNull:!1,unique:!0},slug:{type:a.Sequelize.DataTypes.STRING,allowNull:!1,unique:!0},category:{type:a.Sequelize.DataTypes.STRING},isActive:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!0},car:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!1},motorcycle:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!1},genericCta:{type:a.Sequelize.DataTypes.TEXT},carButton:{type:a.Sequelize.DataTypes.STRING},motoButton:{type:a.Sequelize.DataTypes.STRING},seotext:{type:a.Sequelize.DataTypes.TEXT},_string:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["name"]),get:function(){return this.get("name")}},icon:{type:a.Sequelize.DataTypes.STRING}},{sequelize:e,modelName:"Service",tableName:"services",updatedAt:"updatedAt",createdAt:"createdAt"}),t}},function(e,t,n){"use strict";n.r(t);var a=n(0);t.default=e=>{class t extends a.Model{}return t.init({id:{type:a.Sequelize.DataTypes.UUID,defaultValue:a.Sequelize.UUIDV4,allowNull:!1,primaryKey:!0},name:{type:a.Sequelize.DataTypes.STRING,allowNull:!1,unique:!0},slug:{type:a.Sequelize.DataTypes.STRING,allowNull:!1,unique:!0},activeFrom:{type:a.Sequelize.DataTypes.STRING},activeTo:{type:a.Sequelize.DataTypes.STRING},country:{type:a.Sequelize.DataTypes.STRING},isCommon:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!1},isActive:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!1},car:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!0},motorcycle:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!1},seotext:{type:a.Sequelize.DataTypes.TEXT},_string:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["name"]),get:function(){return this.get("name")}}},{sequelize:e,modelName:"Make",tableName:"makes",updatedAt:"updatedAt",createdAt:"createdAt"}),t}},function(e,t,n){"use strict";n.r(t);var a=n(0);t.default=e=>{class t extends a.Model{async updateData(e){const t=this.data;return this.data={...t,...e},await this.save()}}return t.init({id:{type:a.Sequelize.DataTypes.UUID,defaultValue:a.Sequelize.UUIDV4,primaryKey:!0,allowNull:!1},name:{type:a.Sequelize.DataTypes.TEXT,allowNull:!1},slug:{type:a.Sequelize.DataTypes.STRING,allowNull:!1,unique:!0},sourceName:{type:a.Sequelize.DataTypes.STRING},sourceLink:{type:a.Sequelize.DataTypes.TEXT},date:{type:a.Sequelize.DataTypes.DATE,get:function(e){return Number(this.getDataValue(e))}},location:{type:a.Sequelize.DataTypes.STRING},attributes:{type:a.Sequelize.DataTypes.TEXT},definition:{type:a.Sequelize.DataTypes.TEXT},usage:{type:a.Sequelize.DataTypes.TEXT},isActive:{type:a.Sequelize.DataTypes.BOOLEAN,defaultValue:!1,allowNull:!1},data:{type:a.Sequelize.DataTypes.JSON},_string:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["name"]),get:function(){return this.get("name")}}},{sequelize:e,modelName:"DictionaryExpression",tableName:"dictionary_expressions",updatedAt:"updatedAt",createdAt:"createdAt"}),t.associate=e=>{t.belongsTo(e.DictionaryAuthor,{as:"author",targetKey:"id",foreignKey:{name:"authorId",type:a.Sequelize.Sequelize.DataTypes.UUID},onDelete:"CASCADE"}),e.DictionaryAuthor.hasMany(t,{as:"expressions",targetKey:"expression",foreignKey:{name:"authorId",type:a.Sequelize.Sequelize.DataTypes.UUID},onDelete:"CASCADE"}),e.DictionaryTag.belongsToMany(t,{as:"expressions",through:"dictionary_expressions_tags",foreignKey:{name:"expressionId",type:a.Sequelize.Sequelize.DataTypes.UUID},otherKey:{name:"tagId",type:a.Sequelize.Sequelize.DataTypes.UUID}}),t.belongsToMany(e.DictionaryTag,{as:"tags",through:"dictionary_expressions_tags",foreignKey:{name:"tagId",type:a.Sequelize.Sequelize.DataTypes.UUID},otherKey:{name:"expressionId",type:a.Sequelize.Sequelize.DataTypes.UUID}})},t}},function(e,t,n){"use strict";n.r(t);var a=n(0);t.default=e=>{class t extends a.Model{async updateData(e){const t=this.data;return this.data={...t,...e},await this.save()}}return t.init({id:{type:a.Sequelize.DataTypes.UUID,defaultValue:a.Sequelize.UUIDV4,primaryKey:!0,allowNull:!1},name:{type:a.Sequelize.DataTypes.STRING,allowNull:!1},slug:{type:a.Sequelize.DataTypes.STRING,allowNull:!1,unique:!0},altName:{type:a.Sequelize.DataTypes.STRING},publicPicture:{type:a.Sequelize.DataTypes.TEXT},authorityLink:{type:a.Sequelize.DataTypes.TEXT},publicLink:{type:a.Sequelize.DataTypes.TEXT},description:{type:a.Sequelize.DataTypes.TEXT},data:{type:a.Sequelize.DataTypes.JSON},_string:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["name"]),get:function(){return this.get("name")}}},{sequelize:e,modelName:"DictionaryAuthor",tableName:"dictionary_authors",updatedAt:"updatedAt",createdAt:"createdAt"}),t.associate=e=>{},t}},function(e,t,n){"use strict";n.r(t);var a=n(0);t.default=e=>{class t extends a.Model{async updateData(e){const t=this.data;return this.data={...t,...e},await this.save()}}return t.init({id:{type:a.Sequelize.DataTypes.UUID,defaultValue:a.Sequelize.UUIDV4,primaryKey:!0,allowNull:!1},name:{type:a.Sequelize.DataTypes.STRING,allowNull:!1},slug:{type:a.Sequelize.DataTypes.STRING,allowNull:!1},data:{type:a.Sequelize.DataTypes.JSON},_string:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["name"]),get:function(){return this.get("name")}}},{sequelize:e,modelName:"DictionaryTag",tableName:"dictionary_tags",updatedAt:"updatedAt",createdAt:"createdAt"}),t.associate=e=>{},t}},function(e,t,n){"use strict";n.r(t);var a=n(0);t.default=e=>{class t extends a.Model{}return t.init({id:{type:a.Sequelize.DataTypes.UUID,defaultValue:a.Sequelize.UUIDV4,primaryKey:!0,allowNull:!1},name:{type:a.Sequelize.DataTypes.STRING,allowNull:!1,unique:!0},taste:{type:a.Sequelize.DataTypes.STRING},_string:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["name"]),get:function(){return this.get("name")}}},{sequelize:e,modelName:"Fruit",tableName:"food_fruits",updatedAt:"updatedAt",createdAt:"createdAt"}),t}},function(e,t,n){"use strict";n.r(t);var a=n(0),r=n(3);const s=()=>Date.now()+1e3*(Number(process.env.TIME_TO_LOGIN)||120);t.default=e=>{class t extends a.Model{static clean(){this.destroy({where:{expires:{[a.Sequelize.Op.lte]:Date.now()}}})}async login(){return!(!this.isValid||!this.useToLogin)&&(this.useToLogin=!1,await this.save(),!0)}}return t.init({id:{type:a.Sequelize.DataTypes.UUID,defaultValue:a.Sequelize.UUIDV4,allowNull:!1,primaryKey:!0},expires:{type:a.Sequelize.DataTypes.DATE,defaultValue:s},useToLogin:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!1},code:{type:a.Sequelize.DataTypes.STRING,allowNull:!1,defaultValue:()=>Object(r.f)(64),unique:!0},provider:{type:a.Sequelize.DataTypes.STRING},isValid:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.BOOLEAN,"expires"),get(){return this.get("expires")>=Date.now()}},_string:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["id"]),get:function(){return this.get("id").slice(8)}}},{sequelize:e,modelName:"OAuth2Setter",tableName:"oauth2_setters",updatedAt:"updatedAt",createdAt:"createdAt"}),t.associate=e=>{e.User.hasMany(t,{as:"oAuth2Setters",targetKey:"id",foreignKey:{name:"userId",type:a.Sequelize.DataTypes.UUID}}),t.belongsTo(e.User,{as:"user",targetKey:"id",foreignKey:{name:"userId",type:a.Sequelize.DataTypes.UUID}})},t}},function(e,t,n){"use strict";n.r(t);var a=n(0);t.default=e=>{class t extends a.Model{}return t.init({id:{type:a.Sequelize.DataTypes.UUID,defaultValue:a.Sequelize.UUIDV4,allowNull:!1,primaryKey:!0},refreshToken:{type:a.Sequelize.DataTypes.STRING},picture:{type:a.Sequelize.DataTypes.TEXT},provider:{type:a.Sequelize.DataTypes.STRING},scope:{type:a.Sequelize.DataTypes.STRING},locale:{type:a.Sequelize.DataTypes.STRING},name:{type:a.Sequelize.DataTypes.STRING},email:{type:a.Sequelize.DataTypes.STRING},emailVerified:{type:a.Sequelize.DataTypes.BOOLEAN,defaultValue:!1},expires:{type:a.Sequelize.DataTypes.DATE},_string:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["provider","email","id"]),get:function(){return this.get("email")?`${this.get("provider")}/${this.get("email")}`:`${this.get("provider")}/${this.get("id").slice(8)}`}}},{sequelize:e,modelName:"OAuth2Profile",tableName:"oauth2_profiles",updatedAt:"updatedAt",createdAt:"createdAt"}),t.associate=e=>{e.User.hasMany(t,{as:"oAuth2Profiles",targetKey:"id",foreignKey:{name:"userId",type:a.Sequelize.DataTypes.UUID}}),t.belongsTo(e.User,{as:"user",targetKey:"id",foreignKey:{name:"userId",type:a.Sequelize.DataTypes.UUID}})},t}},function(e,t,n){"use strict";n.r(t);var a=n(0),r=n(11),s=n(3);const i=n(120).default.ORDER_DOMAINS_TO_EMAILS,o="false"!==process.env.WEBSITE_DOMAIN_DRY_ORDER;t.default=e=>{class t extends a.Model{static async isAvailable(e){const{available:t}=await r.VercelAPI.get.isDomainAvailable(e);return t}async order(){const e=JSON.stringify({id:this.id,name:this.name,vercelNameservers:this.vercelNameservers,vercelDomainId:this.vercelDomainId},null,2),t={to:i,subject:"order "+this.name,text:`\n         ${e}\n\n         \n\n         A pleasure to do business ~~ Merci !\n        `},n=new s.b(t),a=await n.send(o);return this.isOrdered=!0,a.accepted&&a.accepted.length||(this.isError=!0),await this.save(),a.accepted.length>0}async addToVercel(){if(this.vercelDomainId)return!1;const e={};this.vercelTeamId&&(e.teamId=this.vercelTeamId);const{domain:t}=await r.VercelAPI.post.addDomain(e,{name:this.name});return this.vercelDomainId=t.id,this.vercelNameservers=t.intendedNameservers,this.isInstalled=!1,await this.save(),!0}async deleteFromVercel(){const e={name:this.name};this.vercelTeamId&&(e.teamId=this.vercelTeamId);const{uid:t}=await r.VercelAPI.delete.domain(e);return this.vercelDomainId=null,this.isInstalled=!1,await this.save(),!0}async validateVercelDns(){const e={name:this.name};this.vercelTeamId&&(e.teamId=this.vercelTeamId);try{const{domain:t}=await r.VercelAPI.post.verifyDomain(e);return this.bought=!0,this.isInstalled=!0,await this.save()}catch(e){return!1}}async getInfoFromVercel(){const e={name:this.name};this.vercelTeamId&&(e.teamId=this.vercelTeamId);const{domain:t}=await r.VercelAPI.get.domain(e);return t}}return t.init({id:{type:a.Sequelize.DataTypes.UUID,defaultValue:a.Sequelize.UUIDV4,allowNull:!1,primaryKey:!0},name:{type:a.Sequelize.DataTypes.STRING,allowNull:!1,unique:!0},alt:{type:a.Sequelize.DataTypes.STRING,allowNull:!1,unique:!0},isOrdered:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!1},isBought:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!1},isInstalled:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!1},isError:{type:a.Sequelize.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!1},vercelNameservers:{type:a.Sequelize.DataTypes.JSON},vercelTeamId:{type:a.Sequelize.DataTypes.STRING,defaultValue:process.env.VERCEL_TEAM_ID},vercelDomainId:{type:a.Sequelize.DataTypes.STRING},main:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["name","alt","isInstalled"]),get:function(){return this.get("isInstalled")?this.get("name"):this.get("alt")}},isAddedToVercel:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.BOOLEAN,["vercelDomainId"]),get:function(){return!!this.get("vercelDomainId").length}},_string:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["name"]),get:function(){return this.get("name")}}},{sequelize:e,modelName:"Domain",tableName:"website_domains",updatedAt:"updatedAt",createdAt:"createdAt"}),t.associate=e=>{},t.addHook("beforeDestroy","removeFromVercel",async(e,t)=>{if(e.vercelDomainId)try{await e.deleteFromVercel()}catch(e){}}),t}},function(e,t,n){"use strict";n.r(t);var a=n(22),r=n.n(a),s=n(55),i=n.n(s);const o="https://api.vercel.com",l=e=>{var t;return(t=e,!(0===Object.keys(t).length))?"?"+i.a.stringify(e):""},d={Authorization:"Bearer "+process.env.VERCEL_API_SECRET},c={GET:{domains:e=>"/v5/domains"+l(e),domain:({name:e,...t})=>`/v4/domains/${e}${l(t)}`,isDomainAvailable:e=>"/v4/domains/status?name="+e,teams:()=>"/v1/teams"},POST:{verifyDomain:({name:e,...t})=>`/v4/domains/${e}/verify${l(t)}`,addDomain:e=>"/v4/domains"+l(e)},DELETE:{domain:({name:e,...t})=>`/v4/domains/${e}${l(t)}`}},u={GET:e=>async(t={})=>{const n=e(t);var a={headers:d,method:"GET",uri:o+n,json:!0};return await r()(a)},POST:e=>async(t={},n)=>{const a=e(t);var s={headers:d,body:n,method:"POST",uri:o+a,json:!0};return await r()(s)},DELETE:e=>async(t={})=>{const n=e(t);var a={headers:d,method:"DELETE",uri:o+n,json:!0};return await r()(a)}},p={};Object.keys(c).forEach(e=>{p[e.toLowerCase()]={};const t=p[e.toLowerCase()];Object.keys(c[e]).forEach(n=>{t[n]=u[e](c[e][n])})}),t.default=p},function(e,t,n){"use strict";n.r(t);var a=n(0);t.default=e=>{class t extends a.Model{async addDomain(e,t){}async verifyDomain(){}async updateData(e){const t=this.data;return this.data={...t,...e},await this.save()}}return t.init({id:{type:a.Sequelize.DataTypes.UUID,defaultValue:a.Sequelize.UUIDV4,allowNull:!1,primaryKey:!0},name:{type:a.Sequelize.DataTypes.STRING,allowNull:!1,defaultValue:"john"},data:{type:a.Sequelize.DataTypes.JSON,defaultValue:{}},_string:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["name"]),get:function(){return this.get("name")}}},{sequelize:e,modelName:"Site",tableName:"websites",updatedAt:"updatedAt",createdAt:"createdAt"}),t.associate=e=>{t.belongsTo(e.Domain,{as:"domain",targetKey:"name",foreignKey:{name:"domainName",type:a.Sequelize.DataTypes.STRING}}),e.Domain.hasOne(t,{as:"site",targetKey:"name",foreignKey:{name:"domainName",type:a.Sequelize.DataTypes.STRING}})},t}},function(e,t,n){"use strict";n.r(t);var a=n(0);t.default=e=>{class t extends a.Model{async updateData(e){const t=this.data;return this.data={...t,...e},await this.save()}}return t.init({id:{type:a.Sequelize.DataTypes.UUID,defaultValue:a.Sequelize.UUIDV4,allowNull:!1,primaryKey:!0},name:{type:a.Sequelize.DataTypes.STRING,allowNull:!1},slug:{type:a.Sequelize.DataTypes.STRING,allowNull:!0},metaData:{type:a.Sequelize.DataTypes.JSON},data:{type:a.Sequelize.DataTypes.JSON,defaultValue:{}},_string:{type:new a.Sequelize.DataTypes.VIRTUAL(a.Sequelize.DataTypes.STRING,["name"]),get:function(){return this.get("name")}}},{sequelize:e,modelName:"Page",tableName:"website_pages",updatedAt:"updatedAt",createdAt:"createdAt",indexes:[{unique:!0,fields:["slug","siteId"]}]}),t.associate=e=>{e.Site.hasMany(t,{as:"pages",targetKey:"id",foreignKey:{name:"siteId",type:a.Sequelize.DataTypes.UUID}}),t.belongsTo(e.Site,{as:"website",targetKey:"id",foreignKey:{name:"siteId",type:a.Sequelize.DataTypes.UUID}})},t}},function(e,t,n){"use strict";n.r(t);var a=n(73);n.d(t,"dependencies",(function(){return a}));var r=n(29);n.d(t,"types",(function(){return r.default}));var s=n(30);n.d(t,"resolvers",(function(){return s.default}))},function(e){e.exports=JSON.parse("[]")},function(e,t,n){"use strict";n.r(t);var a=n(4),r=n(3),s=(n(28),n(27));const i=a.default.User,o=[{all:!0}],l={all:(e,t)=>i.findAll({include:o,raw:!0,nest:!0}),get:(e,{id:t})=>i.findByPk(t,{include:o,plain:!0}),add:async(e,{input:t})=>await i.create(t,{include:o,plain:!0}),delete:async(e,{id:t})=>{const n=await i.findByPk(t).catch(e=>{console.log(e.message)});return!!n&&(await n.destroy(),n.id)},update:async(e,{input:t,id:n})=>(await i.update(t,{where:{id:n},returning:!0}).catch(e=>console.log(e.message)))[1][0],setSuperuser:async(e,{id:t,value:n},a)=>{const r=await i.findByPk(t);return r.superuser=n,await r.save(),!0},setUserPassword:async(e,{id:t,value:n},a)=>{const r=await i.findByPk(t);return await r.setPassword(n),!0},signup:async(e,t,n)=>{const{errors:a,isValid:o}=await Object(s.validateSignupInput)(t);if(!o)throw console.log(a),new r.c({data:a});const{password:l,...d}=t,c=await i.create(d);return await c.setPassword(l),c.getAuthToken()},login:async(e,t,n)=>{const{errors:a,isValid:o}=Object(s.validateLoginInput)(t);if(!o)throw new r.c({data:a});const{email:l,password:d}=t,c=l.toLowerCase(),u=await i.findOne({where:{email:c}});if(u){if(await u.isPasswordValid(d))return await u.getAuthToken();throw new r.c({message:"Incorrect credentials"})}throw new r.c({message:"Incorrect credentials"})},updateMe:async(e,{input:t},n)=>(await i.update(t,{where:{id:n.user.id},returning:!0}).catch(e=>console.log(e.message)))[1][0],setMyPassword:async(e,{oldPassword:t,newPassword:n},a)=>{const r=await i.findByPk(a.user.id);return!!(r.passwordHash&&await r.isPasswordValid(t)||!r.passwordHash)&&(await r.setPassword(n),!0)}};t.default=l},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var a=n(18),r=n.n(a),s=n(3);function i(e){let t={};return e.email=Object(s.e)(e.email)?"":e.email,e.password=Object(s.e)(e.password)?"":e.password,r.a.isEmail(e.email)||(t.email="Email is invalid"),r.a.isEmpty(e.email)&&(t.email="Email is required"),r.a.isLength(e.password,{min:6,max:30})||(t.password="Password must have 6 chars"),r.a.isEmpty(e.password)&&(t.password="Password is required"),{errors:t,isValid:Object(s.e)(t)}}},function(e,t,n){"use strict";n.r(t);var a=n(18),r=n.n(a),s=n(3);const i=n(4).default.User;t.default=async e=>{let t={};if(e.lastName=Object(s.e)(e.lastName)?"":e.lastName,e.username=Object(s.e)(e.username)?"":e.username,e.firstName=Object(s.e)(e.firstName)?"":e.firstName,e.email=Object(s.e)(e.email)?"":e.email,e.password=Object(s.e)(e.password)?"":e.password,r.a.isLength(e.firstName,{min:2,max:30})||(t.firstName="First name must be between 2 to 30 chars"),r.a.isEmpty(e.lastName)&&(t.lastName="Last name field is required"),r.a.isEmpty(e.firstName)&&(t.firstName="First name field is required"),r.a.isEmpty(e.username)&&(t.username="Username field is required"),!r.a.isEmpty(e.username)){await i.findOne({where:{email:e.username}})&&(t.username="Username already exists")}if(r.a.isEmail(e.email)||(t.email="Email is invalid"),r.a.isEmpty(e.email)&&(t.email="Email is required"),r.a.isEmail(e.email)&&!r.a.isEmpty(e.email)){await i.findOne({where:{email:e.email}})&&(t.email="Email already exists")}return r.a.isLength(e.password,{min:6,max:30})||(t.password="Password must have 6 chars"),r.a.isEmpty(e.password)&&(t.password="Password is required"),{errors:t,isValid:Object(s.e)(t)}}},function(e,t,n){"use strict";n.r(t);var a=n(4);n(3);const r=a.default.Token,s=[{all:!0}],i={all:(e,t)=>r.findAll({include:s,raw:!0,nest:!0}),get:(e,{id:t})=>r.findByPk(t,{include:s,plain:!0}),add:async(e,{input:t})=>await r.create(t,{include:s,plain:!0}),delete:async(e,{id:t})=>{const n=await r.findByPk(t).catch(e=>{console.log(e.message)});return!!n&&(await n.destroy(),n.id)},update:async(e,{input:t,id:n})=>(await r.update(t,{where:{id:n},returning:!0}).catch(e=>console.log(e.message)))[1][0]};t.default=i},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(3);const s=()=>({maxAge:a.random.number({min:1e3,max:604800}),token:a.random.alphaNumeric(800)});t.default=(e={})=>Object(r.d)(s,e)},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(3);const s=()=>({firstName:a.name.firstName(),lastName:a.name.lastName(),email:a.internet.email().toLowerCase(),username:a.internet.userName(),handle:a.internet.userName(),superuser:a.random.boolean(),isActive:a.random.boolean(),onboardingStatus:a.random.number({min:-1,max:1})});t.default=(e={})=>Object(r.d)(s,e)},function(e,t,n){"use strict";n.r(t);var a=n(81);n.d(t,"dependencies",(function(){return a}));var r=n(31);n.d(t,"types",(function(){return r.default}));var s=n(32);n.d(t,"resolvers",(function(){return s.default}))},function(e){e.exports=JSON.parse('["auth","website"]')},function(e,t,n){"use strict";n.r(t);var a=n(4);n(3);const r=a.default.Shop,s=[{all:!0}],i={all:(e,t)=>r.findAll({include:s,raw:!0,nest:!0}),get:(e,{id:t})=>r.findByPk(t,{include:s,plain:!0}),add:async(e,{input:t})=>await r.create(t,{include:s,plain:!0}),delete:async(e,{id:t})=>{const n=await r.findByPk(t).catch(e=>{console.log(e.message)});return!!n&&(await n.destroy(),n.id)},update:async(e,{input:t,id:n})=>(await r.update(t,{where:{id:n},returning:!0}).catch(e=>console.log(e.message)))[1][0]};t.default=i},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(3);const s=()=>({name:a.company.companyName(),slug:a.helpers.slugify(a.company.companyName().toLowerCase()),publicPhoneNumber:String(a.random.number(10**6,10**10)),privatePhoneNumber:String(a.random.number(10**6,10**10)),address:a.address.streetAddress(),address2:a.address.streetAddress(),city:a.address.city(),postcode:a.address.zipCode(),country:a.address.country(),regularOpeningTimes:{1:a.random.words(8),2:a.random.words(8),3:a.random.words(8),4:a.random.words(8),5:a.random.words(8),6:a.random.words(8),7:a.random.words(8)},specialOpeningTimes:{christmas:a.random.words(8)},data:{k:a.random.words(8)}});t.default=(e={})=>Object(r.d)(s,e)},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(3);const s=()=>({name:a.company.companyName(),slug:a.helpers.slugify(a.company.companyName().toLowerCase()),metaData:{k:a.random.words(8),l:a.random.words(8),m:a.random.words(8)},data:{k:a.random.words(8),l:a.random.words(8),m:a.random.words(8)}});t.default=(e={})=>Object(r.d)(s,e)},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(3);const s=()=>({name:a.company.companyName(),data:{k:a.random.words(8),l:a.random.words(8)}});t.default=(e={})=>Object(r.d)(s,e)},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(3);const s=()=>({name:a.internet.domainName(),alt:a.internet.domainName(),isOrdered:a.random.boolean(),isBought:a.random.boolean(),isInstalled:a.random.boolean(),isError:a.random.boolean(),vercelNameservers:[a.internet.domainName(),a.internet.domainName(),a.internet.domainName(),a.internet.domainName()],vercelTeamId:process.env.VERCEL_TEAM_ID,vercelDomainId:a.random.alphaNumeric(20)});t.default=(e={})=>Object(r.d)(s,e)},function(e,t,n){"use strict";n.r(t);var a=n(88);n.d(t,"dependencies",(function(){return a}));var r=n(33);n.d(t,"types",(function(){return r.default}));var s=n(34);n.d(t,"resolvers",(function(){return s.default}))},function(e){e.exports=JSON.parse("[]")},function(e,t,n){"use strict";n.r(t);var a=n(4);n(3);const r=a.default.Service,s={all:(e,t)=>r.findAll({raw:!0,nest:!0}),get:(e,{id:t})=>r.findByPk(t,{plain:!0}),add:async(e,{input:t})=>await r.create(t,{plain:!0}),delete:async(e,{id:t})=>{const n=await r.findByPk(t).catch(e=>{console.log(e.message)});return!!n&&(await n.destroy(),n.id)},update:async(e,{input:t,id:n})=>(await r.update(t,{where:{id:n},returning:!0}).catch(e=>console.log(e.message)))[1][0]};t.default=s},function(e,t,n){"use strict";n.r(t);var a=n(4);n(3);const r=a.default.Make,s={all:(e,t)=>r.findAll({raw:!0,nest:!0}),get:(e,{id:t})=>r.findByPk(t,{plain:!0}),add:async(e,{input:t})=>await r.create(t,{plain:!0}),delete:async(e,{id:t})=>{const n=await r.findByPk(t).catch(e=>{console.log(e.message)});return!!n&&(await n.destroy(),n.id)},update:async(e,{input:t,id:n})=>(await r.update(t,{where:{id:n},returning:!0}).catch(e=>console.log(e.message)))[1][0]};t.default=s},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(3);const s=()=>({name:a.company.companyName(),slug:a.helpers.slugify(a.company.companyName().toLowerCase()),activeFrom:"1920",activeTo:"present",country:a.address.country(),isCommon:a.random.boolean(),isActive:a.random.boolean(),car:a.random.boolean(),motorcycle:a.random.boolean(),seotext:a.lorem.paragraph(5)});t.default=(e={})=>Object(r.d)(s,e)},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(3);const s=()=>({name:a.lorem.words(8),slug:a.helpers.slugify(a.lorem.words(8).toLowerCase()),category:a.commerce.department(),isActive:a.random.boolean(),car:a.random.boolean(),motorcycle:a.random.boolean(),genericCta:a.lorem.paragraph(2),carButton:a.lorem.words(6),motoButton:a.lorem.words(6),seotext:a.lorem.paragraph(5)});t.default=(e={})=>Object(r.d)(s,e)},function(e,t,n){"use strict";n.r(t);var a=n(94);n.d(t,"dependencies",(function(){return a}));var r=n(35);n.d(t,"types",(function(){return r.default}));var s=n(36);n.d(t,"resolvers",(function(){return s.default}))},function(e){e.exports=JSON.parse("[]")},function(e,t,n){"use strict";n.r(t);var a=n(4);n(3);const r=a.default.DictionaryExpression,s=[{all:!0}],i={all:(e,t)=>r.findAll({include:s,raw:!0,nest:!0}),get:(e,{id:t})=>r.findByPk(t,{include:s,plain:!0}),add:async(e,{input:t})=>await r.create(t,{include:s,plain:!0}),delete:async(e,{id:t})=>{const n=await r.findByPk(t).catch(e=>{console.log(e.message)});return!!n&&(await n.destroy(),n.id)},update:async(e,{input:t,id:n})=>(await r.update(t,{where:{id:n},returning:!0}).catch(e=>console.log(e.message)))[1][0]};t.default=i},function(e,t,n){"use strict";n.r(t);var a=n(4);n(3);const r=a.default.DictionaryAuthor,s=[{all:!0}],i={all:(e,t)=>r.findAll({include:s,raw:!0,nest:!0}),get:(e,{id:t})=>r.findByPk(t,{include:s,plain:!0}),add:async(e,{input:t})=>await r.create(t,{include:s,plain:!0}),delete:async(e,{id:t})=>{const n=await r.findByPk(t).catch(e=>{console.log(e.message)});return!!n&&(await n.destroy(),n.id)},update:async(e,{input:t,id:n})=>(await r.update(t,{where:{id:n},returning:!0}).catch(e=>console.log(e.message)))[1][0]};t.default=i},function(e,t,n){"use strict";n.r(t);var a=n(4);n(3);const r=a.default.DictionaryTag,s={all:(e,t)=>r.findAll({raw:!0,nest:!0}),get:(e,{id:t})=>r.findByPk(t,{plain:!0}),add:async(e,{input:t})=>await r.create(t,{plain:!0}),delete:async(e,{id:t})=>{const n=await r.findByPk(t).catch(e=>{console.log(e.message)});return!!n&&(await n.destroy(),n.id)},update:async(e,{input:t,id:n})=>(await r.update(t,{where:{id:n},returning:!0}).catch(e=>console.log(e.message)))[1][0]};t.default=s},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(3);const s=()=>({name:a.name.findName(),slug:a.helpers.slugify(a.name.findName().toLowerCase()),altName:a.name.findName(),publicPicture:a.internet.url(),authorityLink:a.internet.url(),publicLink:a.internet.url(),description:a.lorem.paragraph(5),data:{content:a.random.words(8),otherKey:a.random.words(8)}});t.default=(e={})=>Object(r.d)(s,e)},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(3);const s=()=>({name:a.company.companyName(),slug:a.helpers.slugify(a.company.companyName().toLowerCase()),sourceName:a.random.words(),sourceLink:a.internet.url(),date:Date.now(),location:a.address.country(),attributes:a.random.words(),definition:a.lorem.paragraph(5),usage:a.lorem.paragraph(5),isActive:a.random.boolean(),data:{content:a.random.words(8),otherKey:a.random.words(8)}});t.default=(e={},t=!1)=>Object(r.d)(s,e)},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(3);const s=()=>({name:a.random.words(8),slug:a.helpers.slugify(a.random.words(8).toLowerCase()),data:{content:a.random.words(8),otherKey:a.random.words(8)}});t.default=(e={})=>Object(r.d)(s,e)},function(e,t){throw new Error("Module build failed (from ./node_modules/babel-loader/lib/index.js):\nSyntaxError: /home/adrian_villa/code/fwrlines/template-graphql-server/src/apps/food/controllers/Fruit.js: Unexpected token, expected \",\" (98:6)\n\n[0m [90m  96 | [39m      }[0m\n[0m [90m  97 | [39m      [90m//include,[39m[0m\n[0m[31m[1m>[22m[39m[90m  98 | [39m      plain[33m:[39m[36mtrue[39m [0m\n[0m [90m     | [39m      [31m[1m^[22m[39m[0m\n[0m [90m  99 | [39m    })[33m.[39m[36mcatch[39m(e [33m=>[39m {[0m\n[0m [90m 100 | [39m      [36mthrow[39m [36mnew[39m [33mObjectNotFoundError[39m({[0m\n[0m [90m 101 | [39m        code[33m:[39m[32m'not_found'[39m[33m,[39m [0m\n    at Parser._raise (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:742:17)\n    at Parser.raiseWithData (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:735:17)\n    at Parser.raise (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:729:17)\n    at Parser.unexpected (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:8757:16)\n    at Parser.expect (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:8743:28)\n    at Parser.parseObj (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:10365:14)\n    at Parser.parseExprAtom (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9995:28)\n    at Parser.parseExprSubscripts (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9602:23)\n    at Parser.parseMaybeUnary (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9582:21)\n    at Parser.parseExprOps (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9452:23)\n    at Parser.parseMaybeConditional (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9425:23)\n    at Parser.parseMaybeAssign (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9380:21)\n    at Parser.parseExprListItem (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:10718:18)\n    at Parser.parseCallExpressionArguments (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9790:22)\n    at Parser.parseSubscript (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9696:31)\n    at Parser.parseSubscripts (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9625:19)\n    at Parser.parseExprSubscripts (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9608:17)\n    at Parser.parseMaybeUnary (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9582:21)\n    at Parser.parseExprOps (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9452:23)\n    at Parser.parseMaybeConditional (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9425:23)\n    at Parser.parseMaybeAssign (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9380:21)\n    at Parser.parseExpression (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9332:23)\n    at Parser.parseReturnStatement (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:11448:28)\n    at Parser.parseStatementContent (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:11129:21)\n    at Parser.parseStatement (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:11081:17)\n    at Parser.parseBlockOrModuleBlockBody (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:11656:25)\n    at Parser.parseBlockBody (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:11642:10)\n    at Parser.parseBlock (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:11626:10)\n    at Parser.parseFunctionBody (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:10634:24)\n    at Parser.parseArrowExpression (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:10603:10)\n    at Parser.parseParenAndDistinguishExpression (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:10221:12)\n    at Parser.parseExprAtom (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9947:21)\n    at Parser.parseExprSubscripts (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9602:23)\n    at Parser.parseMaybeUnary (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9582:21)\n    at Parser.parseExprOps (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9452:23)\n    at Parser.parseMaybeConditional (/home/adrian_villa/code/fwrlines/template-graphql-server/node_modules/@babel/parser/lib/index.js:9425:23)")},function(e,t,n){"use strict";n.r(t);var a=n(128);t.default=[a.default]},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(3);const s=()=>({firstName:a.name.firstName(),lastName:a.name.lastName(),email:a.internet.email().toLowerCase(),username:a.internet.userName(),handle:a.internet.userName(),superuser:a.random.boolean(),isActive:a.random.boolean(),name:a.company.companyName(),slug:a.helpers.slugify(a.company.companyName().toLowerCase()),publicPhoneNumber:String(a.random.number(10**6,10**10)),privatePhoneNumber:String(a.random.number(10**6,10**10)),address:a.address.streetAddress(),address2:a.address.streetAddress(),city:a.address.city(),postcode:a.address.zipCode(),country:a.address.country(),data:{k:a.random.words(8)}});t.default=(e={})=>Object(r.d)(s,e)},function(e,t,n){"use strict";n.r(t);t.default=["# @fwrlines/generator-graphql-server-type 2.8.1 \nextend type Query {\n  allFruits: [Fruit]\n  getFruit(id: ID!): Fruit!\n  #paginatedFruit (page:Int, category: String):PaginatedFruits\n}\n\nextend type Mutation {\n  #Admin mutations\n  addFruit(input:FruitInput!): Fruit!\n  updateFruit(id: ID!, input: FruitInput!): Fruit!\n  deleteFruit(id: ID!): ID!\n\n  #User mutations\n  }\n\ninput FruitInput {\n  name:String\n  taste:String\n}\n\ntype Fruit {\n  id:ID!\n  name:String\n  taste:String\n}\n\n#type PaginatedFruits {\n#  docs: [Fruit]\n#  totalDocs: Int!\n#  limit: Int!\n#  hasPrevPage: Boolean!\n#  hasNextPage: Boolean!\n#  page: Int!\n#  totalPages: Int!\n#  pagingCounter: Int!\n#  prevPage: Int\n#  nextPage: Int\n#}\n",""]},function(e,t,n){"use strict";n.r(t);var a=n(106);n.d(t,"dependencies",(function(){return a}));var r=n(37);n.d(t,"types",(function(){return r.default}));var s=n(38);n.d(t,"resolvers",(function(){return s.default}))},function(e){e.exports=JSON.parse('["auth"]')},function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return s}));var a=n(130),r=n(45);class s extends r.default{constructor(e){super(a.default,e)}}},function(e,t,n){"use strict";n.r(t);var a=n(4),r=n(3);const s=a.default.OAuth2Setter,i=[{all:!0}],o={all:(e,t)=>s.findAll({include:i,raw:!0,nest:!0}),get:(e,{id:t})=>s.findByPk(t,{include:i,plain:!0}),add:async(e,{input:t})=>await s.create(t,{include:i,plain:!0}),delete:async(e,{id:t})=>{const n=await s.findByPk(t).catch(e=>{console.log(e.message)});return!!n&&(await n.destroy(),n.id)},update:async(e,{input:t,id:n})=>(await s.update(t,{where:{id:n},returning:!0}).catch(e=>console.log(e.message)))[1][0],login:async(e,{authorization_code:t})=>{const n=await s.findOne({where:{code:t},include:{all:!0},plain:!0});if(n&&n.login()&&n.user.canLogIn()){const e=await n.user.getAuthToken();return n.destroy(),e}throw new r.c({message:"Incorrect credentials"})},clean:()=>s.clean()};t.default=o},function(e,t,n){"use strict";n.r(t);var a=n(22),r=n.n(a);n(55);const s={profile:()=>"https://www.googleapis.com/oauth2/v3/userinfo"};t.default=class{constructor(e){this.accessToken=e,this.headers={Authorization:"Bearer "+this.accessToken}}async getProfile(){const e={method:"GET",uri:s.profile(),headers:this.headers,json:!0};return await r()(e)}}},function(e,t,n){"use strict";n.r(t);var a=n(2),r=n(3);const s=()=>({provider:a.commerce.product(),useToLogin:a.random.boolean()});t.default=(e={})=>Object(r.d)(s,e)},function(e,t,n){"use strict";n.r(t);var a=n(112);n.d(t,"dependencies",(function(){return a}));var r=n(40);n.d(t,"types",(function(){return r.default}));var s=n(41);n.d(t,"resolvers",(function(){return s.default}))},function(e){e.exports=JSON.parse("[]")},function(e,t,n){"use strict";n.r(t);var a=n(26);n.d(t,"models",(function(){return a}));var r=n(114);n.d(t,"dependencies",(function(){return r}));var s=n(42);n.d(t,"types",(function(){return s.default}));var i=n(43);n.d(t,"resolvers",(function(){return i.default}))},function(e){e.exports=JSON.parse('["auth"]')},function(e,t,n){"use strict";n.r(t);var a=n(4);n(3);const r=a.default.Domain,s=[],i={all:(e,t)=>r.findAll({include:s,raw:!0,nest:!0}),get:(e,{id:t})=>r.findByPk(t,{include:s,plain:!0}),add:async(e,{input:t})=>await r.create(t,{include:s,plain:!0}),delete:async(e,{id:t})=>{const n=await r.findByPk(t).catch(e=>{console.log(e.message)});return!!n&&(await n.destroy(),n.id)},update:async(e,{input:t,id:n})=>(await r.update(t,{where:{id:n},returning:!0}).catch(e=>console.log(e.message)))[1][0]};t.default=i},function(e,t,n){"use strict";n.r(t);var a=n(4);n(3);const r=a.default.Site,s=[{all:!0}],i={all:(e,t)=>r.findAll({include:s,raw:!0,nest:!0}),get:(e,{id:t})=>r.findByPk(t,{include:s,plain:!0}),add:async(e,{input:t})=>await r.create(t,{include:s,plain:!0}),delete:async(e,{id:t})=>{const n=await r.findByPk(t).catch(e=>{console.log(e.message)});return!!n&&(await n.destroy(),n.id)},update:async(e,{input:t,id:n})=>(await r.update(t,{where:{id:n},returning:!0}).catch(e=>console.log(e.message)))[1][0]};t.default=i},function(e,t,n){"use strict";n.r(t);var a=n(4);n(3);const r=a.default.Page,s=[{all:!0}],i={all:(e,t)=>r.findAll({include:s,raw:!0,nest:!0}),get:(e,{id:t})=>r.findByPk(t,{include:s,plain:!0}),add:async(e,{input:t})=>await r.create(t,{include:s,plain:!0}),delete:async(e,{id:t})=>{const n=await r.findByPk(t).catch(e=>{console.log(e.message)});return!!n&&(await n.destroy(),n.id)},update:async(e,{input:t,id:n})=>(await r.update(t,{where:{id:n},returning:!0}).catch(e=>console.log(e.message)))[1][0]};t.default=i},function(e,t,n){"use strict";n.r(t);var a=n(4);n(141);const r=a.default.User,s=n(142).Strategy,i=n(142).ExtractJwt,o={};o.jwtFromRequest=i.fromAuthHeaderAsBearerToken(),o.secretOrKey=process.env.JWT_SECRET,o.issuer="",o.audience="",o.authScheme="Bearer",o.algorithms=["HS512"];const l=new s(o,(e,t)=>{"true"===process.env.DEBUG&&console.log("TOKEN INFORMATION",e),r.findByPk(e.id,{include:{all:!0}}).then(e=>t(null,e||!1)).catch(e=>console.error(e))});t.default=l},function(e,t){e.exports=require("apollo-server")},function(e,t,n){"use strict";n.r(t),t.default={ORDER_DOMAINS_TO_EMAILS:["ale+obambu@meccamico.com"]}},function(e,t,n){"use strict";n.r(t);var a=n(7),r=n(3);t.default={Mutation:{addUser:(e,t,n)=>Object(r.g)(a.UserController.add(e,t.input),n.user),deleteUser:async(e,t,n)=>Object(r.g)(a.UserController.del(e,t.id),n.user),updateUser:async(e,t,n)=>Object(r.g)(a.UserController.update(e,t),n.user),setUserPassword:async(e,t,n)=>Object(r.g)(a.UserController.setUserPassword(e,t,n),n.user),setSuperuser:async(e,t,n)=>Object(r.g)(a.UserController.setSuperuser(e,t,n),n.user),setMyPassword:async(e,t,n)=>Object(r.g)(a.UserController.setMyPassword(e,t,n),n.user),updateMe:async(e,t,n)=>Object(r.g)(a.UserController.updateMe(e,t,n),n.user),login:async(e,t)=>a.UserController.login(e,t.input),signup:async(e,t,n)=>"true"===process.ENV.SIGNUP?a.UserController.signup(e,t.input,n):{token:"none",maxAge:"none"}},Query:{allUsers:(e,t,n)=>Object(r.g)(a.UserController.all(e,t,n),n.user),getUser:(e,t,n)=>Object(r.g)(MainController.get(e,t,n),n.user),me:(e,t,n)=>n.user}}},function(e,t,n){"use strict";n.r(t);var a=n(15),r=n(3);t.default={Mutation:{addShop:async(e,t,n)=>Object(r.g)(a.ShopController.add(e,t),n.user),deleteShop:async(e,t,n)=>Object(r.g)(a.ShopController.del(e,t),n.user),updateShop:async(e,t,n)=>Object(r.g)(a.ShopController.update(e,t),n.user)},Query:{allShops:(e,t,n)=>Object(r.g)(a.ShopController.all(e,t),n.user),getShop:(e,t,n)=>Object(r.g)(a.ShopController.get(e,t),n.user)}}},function(e,t,n){"use strict";n.r(t);var a=n(12),r=n(3);t.default={Mutation:{addService:async(e,t,n)=>Object(r.g)(a.ServiceController.add(e,t),n.user),deleteService:async(e,t,n)=>Object(r.g)(a.ServiceController.delete(e,t),n.user),updateService:async(e,t,n)=>Object(r.g)(a.ServiceController.update(e,t),n.user)},Query:{allServices:(e,t,n)=>Object(r.g)(a.ServiceController.all(e,t),n.user),getService:(e,t,n)=>Object(r.g)(a.ServiceController.get(e,t),n.user)}}},function(e,t,n){"use strict";n.r(t);var a=n(12),r=n(3);t.default={Mutation:{addMake:async(e,t,n)=>Object(r.g)(a.MakeController.add(e,t),n.user),deleteMake:async(e,t,n)=>Object(r.g)(a.MakeController.delete(e,t),n.user),updateMake:async(e,t,n)=>Object(r.g)(a.MakeController.update(e,t),n.user)},Query:{allMakes:(e,t,n)=>Object(r.g)(a.MakeController.all(e,t),n.user),getMake:(e,t,n)=>Object(r.g)(a.MakeController.get(e,t),n.user)}}},function(e,t,n){"use strict";n.r(t);var a=n(8),r=n(3);t.default={Mutation:{addDictionaryTag:async(e,t,n)=>Object(r.g)(a.TagController.add(e,t),n.user),deleteDictionaryTag:async(e,t,n)=>Object(r.g)(a.TagController.del(e,t),n.user),updateDictionaryTag:async(e,t,n)=>Object(r.g)(a.TagController.update(e,t),n.user)},Query:{allDictionaryTags:(e,t,n)=>Object(r.g)(a.TagController.all(e,t),n.user),getDictionaryTag:(e,t,n)=>Object(r.g)(a.TagController.get(e,t),n.user)}}},function(e,t,n){"use strict";n.r(t);var a=n(8),r=n(3);t.default={Mutation:{addDictionaryAuthor:async(e,t,n)=>Object(r.g)(a.AuthorController.add(e,t),n.user),deleteDictionaryAuthor:async(e,t,n)=>Object(r.g)(a.AuthorController.del(e,t),n.user),updateDictionaryAuthor:async(e,t,n)=>Object(r.g)(a.AuthorController.update(e,t),n.user)},Query:{allDictionaryAuthors:(e,t,n)=>Object(r.g)(a.AuthorController.all(e,t),n.user),getDictionaryAuthor:(e,t,n)=>Object(r.g)(a.AuthorController.get(e,t),n.user)}}},function(e,t,n){"use strict";n.r(t);var a=n(8),r=n(3);t.default={Mutation:{addDictionaryExpression:async(e,t,n)=>Object(r.g)(a.ExpressionController.add(e,t),n.user),deleteDictionaryExpression:async(e,t,n)=>Object(r.g)(a.ExpressionController.del(e,t),n.user),updateDictionaryExpression:async(e,t,n)=>Object(r.g)(a.ExpressionController.update(e,t),n.user)},Query:{allDictionaryExpressions:(e,t,n)=>Object(r.g)(a.ExpressionController.all(e,t),n.user),getDictionaryExpression:(e,t,n)=>Object(r.g)(a.ExpressionController.get(e,t),n.user)}}},function(e,t,n){"use strict";n.r(t);var a=n(20),r=n(3);t.default={Mutation:{addFruit:async(e,t,n)=>Object(r.g)(a.FruitController.add(e,t),n.user),deleteFruit:async(e,t,n)=>Object(r.g)(a.FruitController.del(e,t),n.user),updateFruit:async(e,t,n)=>Object(r.g)(a.FruitController.update(e,t),n.user)},Query:{allFruits:(e,t,n)=>Object(r.g)(a.FruitController.all(e,t),n.user),getFruit:(e,t,n)=>Object(r.g)(a.FruitController.get(e,t),n.user)}}},function(e,t,n){"use strict";n.r(t);var a=n(23),r=n(14);t.default={Mutation:{oAuth2Login:async(e,t)=>await r.OAuth2SetterController.login(e,t)},Query:{oAuth2Google:async(e,t,n)=>(r.OAuth2SetterController.clean(),(new a.GoogleAccessManager).getAuthorizationUri())}}},function(e,t,n){"use strict";function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.r(t),n.d(t,"default",(function(){return r}));class r{}a(r,"name","google"),a(r,"service",{clientId:process.env.OAUTH2_GOOGLE_CLIENT,clientSecret:process.env.OAUTH2_GOOGLE_SECRET,authorizeFullPath:"https://accounts.google.com/o/oauth2/auth",accessType:"offline",authorizeRedirectUri:process.env.OAUTH2_GOOGLE_HOST_AUTHORIZE+"/auth/google/callback",scope:["https://www.googleapis.com/auth/userinfo.profile","https://www.googleapis.com/auth/userinfo.email"]}),a(r,"endpoints",{GET:{revokeToken:e=>"https://accounts.google.com/o/oauth2/revoke?token="+e},POST:{getToken:()=>"https://oauth2.googleapis.com/token"}}),a(r,"getAuthorizeParameters",(function(e){const{clientId:t,authorizeRedirectUri:n,scope:a,accessType:r}=this.service;return{client_id:t,redirect_uri:n,access_type:r,scope:"object"==typeof a?a.join("+"):a,response_type:"code",prompt:"consent",state:e}}))},function(e,t,n){"use strict";n.r(t);var a=n(14),r=n(3);t.default={Mutation:{addSetter:async(e,t,n)=>Object(r.g)(a.OAuth2SetterController.add(e,t),n.user),deleteSetter:async(e,t,n)=>Object(r.g)(a.OAuth2SetterController.del(e,t),n.user),updateSetter:async(e,t,n)=>Object(r.g)(a.OAuth2SetterController.update(e,t),n.user)},Query:{allSetters:(e,t,n)=>Object(r.g)(a.OAuth2SetterController.all(e,t),n.user),getSetter:(e,t,n)=>Object(r.g)(a.OAuth2SetterController.get(e,t),n.user)}}},function(e,t,n){"use strict";n.r(t);var a=n(23),r=n(46),s=n(4);const i=s.default.OAuth2Profile,o=s.default.OAuth2Setter,l=s.default.User,d=n(139).Router(),c=process.env.OAUTH2_CLIENT_URL,u="true"===process.env.AUTH_SIGNUP_ENABLED,p=()=>c+"/unauthorized",y={unauthorized:()=>c+"/unauthorized",authorized:e=>`${c}/redeem/${e}`};d.get("/:setter/callback",async(e,t)=>{const{state:n,scope:s,code:d}=e.query;if(s&&d||t.status(400).send("Bad request"),"google"===e.params.setter){console.log("OAuth provider detected : Google"),"google";const e=new a.GoogleAccessManager({state:n,authorizationCode:d});await e.init();const{access_token:s,refresh_token:c,scope:p}=await e.redeemTokensFromAuthCode(),g=new r.GoogleAPI(s),m=await g.getProfile(),f=m.email,h=await i.findOne({where:{email:f,provider:"google"},include:{all:!0}});if(h){console.log("5.1 existing profile",h);const e={scope:p,refreshToken:c,name:m.name,emailVerified:m.email_verified,locale:m.locale,picture:m.picture};await i.update(e,{where:{id:h.id}});const n={firstName:m.given_name,lastName:m.family_name},a=(await l.update(n,{where:{id:h.user.id},returning:!0}))[1][0];if(a.canLogIn()){const e=await o.create({userId:a.id,useToLogin:!0,provider:"google"});t.redirect(y.authorized(e.code))}else t.redirect(y.unauthorized())}else{console.log("520:Profile does not exist, proceeding ");const e=await l.findOne({where:{email:f}});if(e){console.log("5.2.1 User without profile",e);const n={provider:"google",scope:p,email:f,refreshToken:c,name:m.name,emailVerified:m.email_verified,locale:m.locale,userId:e.id,picture:m.picture};await i.create(n);const a={firstName:m.given_name,lastName:m.family_name,emailVerified:m.email_verified},r=(await l.update(a,{where:{id:e.id},returning:!0}))[1][0];if(r.canLogIn()){const e=await o.create({userId:r.id,useToLogin:!0,provider:"google"});console.log("521:Profile Created:User will now log in"),t.redirect(y.authorized(e.code))}else console.log("521:Profile Created:User cant log in"),t.redirect(y.unauthorized())}else if(console.log("522 No profile no user : can signup ?"),u){console.log("5.2.2 signup");const e={provider:"google",scope:p,email:f,refreshToken:c,name:m.name,emailVerified:m.email_verified,locale:m.locale,picture:m.picture},n={email:f,emailVerified:m.email_verified,firstName:m.given_name,lastName:m.family_name,isActive:!0},a=await l.create(n);if(e.userId=a.id,await i.create(e),a.canLogIn()){const e=await o.create({userId:a.id,useToLogin:!0,provider:"google"});console.log("522:New user created, allowed to log in"),t.redirect(y.authorized(e.code))}else console.log("522:Created new user:Not Allowed to log in"),t.redirect(y.unauthorized())}else console.log("522:User Not Existing:Signup Not allowed"),t.redirect(y.unauthorized())}}else console.log("Provider not recognized:auth impossible"),t.redirect(p())}),t.default=d},function(e,t,n){"use strict";n.r(t);n(3);t.default={Mutation:{},Query:{getSimpleHello:(e,t,n)=>"Hello ! This is a sample string returned by the api server",getHello:(e,t,n)=>({y:"mini hello"}),time:(e,t,n)=>Date.now()}}},function(e,t,n){"use strict";n.r(t);var a=n(6),r=n(3);t.default={Mutation:{addPage:async(e,t,n)=>Object(r.g)(a.PageController.add(e,t),n.user),deletePage:async(e,t,n)=>Object(r.g)(a.PageController.del(e,t),n.user),updatePage:async(e,t,n)=>Object(r.g)(a.PageController.update(e,t),n.user)},Query:{allPages:(e,t,n)=>Object(r.g)(a.PageController.all(e,t),n.user),getPage:(e,t,n)=>Object(r.g)(a.PageController.get(e,t),n.user)}}},function(e,t,n){"use strict";n.r(t);var a=n(6),r=n(3);t.default={Mutation:{addSite:async(e,t,n)=>Object(r.g)(a.SiteController.add(e,t),n.user),deleteSite:async(e,t,n)=>Object(r.g)(a.SiteController.del(e,t),n.user),updateSite:async(e,t,n)=>Object(r.g)(a.SiteController.update(e,t),n.user)},Query:{allSites:(e,t,n)=>Object(r.g)(a.SiteController.all(e,t),n.user),getSite:(e,t,n)=>Object(r.g)(a.SiteController.get(e,t),n.user)}}},function(e,t,n){"use strict";n.r(t);var a=n(6),r=n(3);t.default={Mutation:{addDomain:async(e,t,n)=>Object(r.g)(a.DomainController.add(e,t),n.user),deleteDomain:async(e,t,n)=>Object(r.g)(a.DomainController.del(e,t),n.user),updateDomain:async(e,t,n)=>Object(r.g)(a.DomainController.update(e,t),n.user)},Query:{allDomains:(e,t,n)=>Object(r.g)(a.DomainController.all(e,t),n.user),getDomain:(e,t,n)=>Object(r.g)(a.DomainController.get(e,t),n.user)}}},function(e,t){e.exports=require("passport")},function(e,t,n){"use strict";n.r(t);var a=n(7),r=n(3);t.default={Mutation:{addToken:async(e,t,n)=>Object(r.g)(a.TokenController.add(e,t),n.user),deleteToken:async(e,t,n)=>Object(r.g)(a.TokenController.del(e,t),n.user),updateToken:async(e,t,n)=>Object(r.g)(a.TokenController.update(e,t),n.user)},Query:{allTokens:(e,t,n)=>Object(r.g)(a.TokenController.all(e,t),n.user),getToken:(e,t,n)=>Object(r.g)(a.TokenController.get(e,t),n.user)}}},function(e,t){e.exports=require("express")},function(e,t,n){"use strict";var a=n(0);n(194);const r={development:{DB_NAME:process.env.POSTGRES_DEV_DB_NAME,USER:process.env.POSTGRES_DEV_USER,PASSWORD:process.env.POSTGRES_DEV_PASSWORD,HOST:process.env.POSTGRES_DEV_HOST,USE_SSL:"true"===process.env.POSTGRES_DEV_USE_SSL,SSL_CLIENT_KEY:process.env.POSTGRES_DEV_SSL_CLIENT_KEY,SSL_CLIENT_CERT:process.env.POSTGRES_DEV_SSL_CLIENT_CERT,SSL_SERVER_CA:process.env.POSTGRES_DEV_SSL_SERVER_CA,LOGGING:"true"===process.env.SQL_LOGGING&&console.log,REJECT_UNAUTHORIZED:!0},production:{DB_NAME:process.env.POSTGRES_PROD_DB_NAME,USER:process.env.POSTGRES_PROD_USER,PASSWORD:process.env.POSTGRES_PROD_PASSWORD,HOST:process.env.POSTGRES_PROD_HOST,USE_SSL:"true"===process.env.POSTGRES_PROD_USE_SSL,SSL_CLIENT_KEY:process.env.POSTGRES_PROD_SSL_CLIENT_KEY,SSL_CLIENT_CERT:process.env.POSTGRES_PROD_SSL_CLIENT_CERT,SSL_SERVER_CA:process.env.POSTGRES_PROD_SSL_SERVER_CA,LOGGING:"true"===process.env.SQL_LOGGING&&console.log,REJECT_UNAUTHORIZED:!0}}[process.env.MODE],s=e=>String(new Buffer.from(e,"base64")),i=new a.Sequelize(r.DB_NAME,r.USER,r.PASSWORD,{host:r.HOST,logging:r.LOGGING,dialect:"postgres",dialectOptions:{ssl:r.USE_SSL?{key:s(r.SSL_CLIENT_KEY),cert:s(r.SSL_CLIENT_CERT),ca:s(r.SSL_SERVER_CA),rejectUnauthorized:!1}:void 0}});t.a=i},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("passport-jwt")},function(e,t){e.exports={up:async function(e,t){return e.createTable("auth_tokens",{id:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},maxAge:{type:t.DataTypes.INTEGER,defaultValue:3600},token:{type:t.DataTypes.TEXT,allowNull:!1},tokenType:{type:t.DataTypes.STRING},createdAt:{type:t.DataTypes.DATE,allowNull:!1},updatedAt:{type:t.DataTypes.DATE,allowNull:!1}})},down:async function(e,t){return e.dropTable("auth_tokens")}}},function(e,t){e.exports={up:async function(e,t){return e.createTable("users",{id:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},email:{type:t.DataTypes.STRING,unique:!0},emailVerified:{type:t.DataTypes.BOOLEAN,allowNull:!1},firstName:{type:t.DataTypes.STRING},lastName:{type:t.DataTypes.STRING},username:{type:t.DataTypes.STRING,unique:!0},handle:{type:t.DataTypes.STRING,unique:!0},superuser:{type:t.DataTypes.BOOLEAN,allowNull:!1},isActive:{type:t.DataTypes.BOOLEAN,allowNull:!1},passwordHash:{type:t.DataTypes.STRING},onboardingStatus:{type:t.DataTypes.INTEGER,allowNull:!1},createdAt:{type:t.DataTypes.DATE,allowNull:!1},updatedAt:{type:t.DataTypes.DATE,allowNull:!1}})},down:async function(e,t){return e.dropTable("users")}}},function(e,t){e.exports={up:async function(e,t){return e.addColumn("auth_tokens","userId",{type:t.DataTypes.UUID,references:{model:"users",key:"id"},onUpdate:"CASCADE",onDelete:"CASCADE"})},down:async function(e,t){return e.removeColumn("auth_tokens","userId")}}},function(e,t,n){const{Sequelize:a}=n(0);e.exports={up:async function(e){},down:async function(e){}}},function(e,t,n){"use strict";n.r(t);t.default=[{Query:{hello:()=>"Test from meccamico!"}}]},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),s=n(19),i=n.n(s),o=n(7),l=n(4),d=(n(2),n(9));r.a.use(i.a);const{assert:c,expect:u}=r.a,p=l.default.Token,y={generateData:()=>Object(d.generateTestUser)(),model:l.default.User,foreignKey:"userId",references:"id",as:"user"};describe("Auth -> Token Model",(function(){})),describe("Auth -> Token Controller",(function(){describe("Controller -> Get all",(function(){it("Admin API -> The objects retrieved equals the objects looked fori, with no association",(async function(){const e=Object(d.generateTestToken)(),t=Object(d.generateTestToken)(),n=await p.bulkCreate([e,t],{});u(n[0]).to.deep.include(e),u(n[1]).to.deep.include(t);const{id:a}=n[0],{id:r}=n[1],s=await o.TokenController.all({}),i=s.find(e=>e.id===a),l=s.find(e=>e.id===r);c.exists(i.id,"We shouldnt deep test inclusion of empty item"),c.exists(l.id,"We shouldnt deep test inclusion of empty item"),u(i).to.deep.include(e),u(l).to.deep.include(t),n.forEach(e=>e.destroy())})),it("Admin API -> The objects retrieved equals the objects looked for, including associations",(async function(){const e=await y.model.create(y.generateData(),{plain:!0}),t=await y.model.create(y.generateData(),{plain:!0}),n=Object(d.generateTestToken)({[y.foreignKey]:e[y.references]}),a=Object(d.generateTestToken)({[y.foreignKey]:t[y.references]}),r=await p.bulkCreate([n,a],{});u(r[0]).to.deep.include(n),u(r[1]).to.deep.include(a);const{id:s}=r[0],{id:i}=r[1],l=await o.TokenController.all({}),g=l.find(e=>e.id===s),m=l.find(e=>e.id===i);c.exists(g.id,"We shouldnt deep test inclusion of empty item"),c.exists(m.id,"We shouldnt deep test inclusion of empty item"),u(g).to.deep.include({...n,[y.as]:e.dataValues}),u(m).to.deep.include({...a,[y.as]:t.dataValues}),r.forEach(e=>e.destroy()),e.destroy(),t.destroy()}))})),describe("Controller -> Get one",(function(){it("Admin API -> The object retrieved correspond to the objects looked for, with no association",(async function(){const e=Object(d.generateTestToken)(),{id:t}=await p.create(e),n=await o.TokenController.get({},{id:t});u(n).to.deep.include({id:t,...e}),n.destroy()})),it("Admin API -> The object retrieved correspond to the objects looked for, including associations",(async function(){const e=await y.model.create(y.generateData(),{plain:!0}),t=Object(d.generateTestToken)({[y.foreignKey]:e[y.references]}),{id:n}=await p.create(t),a=await o.TokenController.get({},{id:n});u(a).to.deep.include({id:n,...t}),u(a[y.as].dataValues).to.deep.include(e.dataValues),a.destroy(),e.destroy()}))})),describe("Controller -> Add",(function(){it("Admin API -> The object created equals the specs given, with no association",(async function(){const e=Object(d.generateTestToken)(),t=await o.TokenController.add({},{input:e});u(t).to.deep.include(e),t.destroy()})),it("Admin API -> The object created equals the specs given, including associations",(async function(){const e=await y.model.create(y.generateData(),{plain:!0}),t=Object(d.generateTestToken)({[y.foreignKey]:e[y.references]}),n=await o.TokenController.add({},{input:t});u(n).to.deep.include(t),n.destroy(),e.destroy()}))})),describe("Controller -> Update",(function(){it("Admin API -> The object is successfully updated, with no association",(async function(){const e=Object(d.generateTestToken)(),{id:t}=await p.create(e),n=Object(d.generateTestToken)(),a=await o.TokenController.update({},{id:t,input:n});u(a).to.deep.include({id:t,...n}),a.destroy()})),it("Admin API -> The object is successfully updated, with associations",(async function(){const e=await y.model.create(y.generateData(),{plain:!0}),t=Object(d.generateTestToken)({[y.foreignKey]:e[y.references]}),{id:n}=await p.create(t),a=Object(d.generateTestToken)(),r=await o.TokenController.update({},{id:n,input:a});u(r).to.deep.include({id:n,...a}),r.destroy(),e.destroy()}))})),describe("Controller -> Delete",(function(){it("Admin API -> The object is successfully deleted",(async function(){const e=Object(d.generateTestToken)(),{id:t}=await p.create(e),n=await o.TokenController.delete({},{id:t});c(n===t,`The controller should respond ${t} to the deletion command`),await p.findByPk(t,{transaction:null});const a=await p.findByPk(t,{transaction:null});u(a).to.equal(null)}))}))}))},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n(7),s=n(4),i=n(28),o=n.n(i),l=n(47),d=n.n(l),c=n(2),u=n(9),p=n(3);const y=s.default.User;describe("Auth -> User Model",(function(){describe("Model -> Instance Method -> setPassword",(function(){it("Model API -> Set the instance passwordHash using bcrypt",(async function(){const e=Object(u.generateTestUser)(),t=c.internet.password(),n=await y.create(e);await n.setPassword(t);const r=o.a.compareSync(t,n.passwordHash);Object(a.expect)(r).to.equal(!0),n.destroy()}))})),describe("Model -> Instance Method -> isPasswordValid",(function(){it("Model API -> Test whether the provided password corresponds to the saved hash",(async function(){const e=Object(u.generateTestUser)(),t=c.internet.password(),n=await y.create({...e,passwordHash:o.a.hashSync(t,8)});Object(a.expect)(n.passwordHash).to.not.have.lengthOf(0);const r=await n.isPasswordValid(t);Object(a.expect)(r).to.equal(!0),n.destroy()}))}))})),describe("Auth -> User Controller",(function(){describe("Controller -> Get all",(function(){it("Admin API -> The objects retrieved equals the objects looked for",(async function(){const e=Object(u.generateTestUser)(),t=Object(u.generateTestUser)(),n=await y.bulkCreate([e,t],{});Object(a.expect)(n[0]).to.deep.include(e),Object(a.expect)(n[1]).to.deep.include(t);const{id:s}=n[0],{id:i}=n[1],o=await r.UserController.all({}),l=o.find(e=>e.id===s),d=o.find(e=>e.id===i);a.assert.exists(l.id,"We shouldnt deep test inclusion of empty item"),a.assert.exists(d.id,"We shouldnt deep test inclusion of empty item"),Object(a.expect)(l).to.deep.include(e),Object(a.expect)(d).to.deep.include(t),n.forEach(e=>e.destroy())}))})),describe("Controller -> Get one",(function(){it("Admin API -> The object retrieved correspond to the objects looked for",(async function(){const e=Object(u.generateTestUser)(),{id:t}=await y.create(e),n=await r.UserController.get({},{id:t});Object(a.expect)(n).to.deep.include({id:t,...e,email:e.email.toLowerCase()}),n.destroy()}))})),describe("Controller -> Add",(function(){it("Admin API -> The object created equals the specs given",(async function(){const e=Object(u.generateTestUser)(),t=await r.UserController.add({},{input:e});Object(a.expect)(t).to.deep.include({...e,email:e.email.toLowerCase()}),t.destroy()}))})),describe("Controller -> Update",(function(){it("Admin API -> The object is successfully updated",(async function(){const e=Object(u.generateTestUser)(),{id:t}=await y.create(e),n=Object(u.generateTestUser)(),s=await r.UserController.update({},{id:t,input:n});Object(a.expect)(s).to.deep.include({id:t,...n,email:n.email.toLowerCase()}),s.destroy()}))})),describe("Controller -> Delete",(function(){it("Admin API -> The object is successfully deleted",(async function(){const e=Object(u.generateTestUser)(),{id:t}=await y.create(e),n=await r.UserController.delete({},{id:t});Object(a.assert)(n===t,"The controller should respond true to the deletion command"),await y.findByPk(t,{transaction:null});const s=await y.findByPk(t,{transaction:null});Object(a.expect)(s).to.equal(null)}))})),describe("Controller -> Set Superuser",(function(){it("Admin API -> Set whether the selected user is a superuser",(async function(){const e=Object(u.generateTestUser)({superuser:!1}),t=await y.create(e),{id:n,superuser:s}=t;Object(a.expect)(s).to.be.equal(!1);const i=await r.UserController.setSuperuser({},{id:n,value:!0});Object(a.expect)(i).to.be.equal(!0);const{superuser:o}=await y.findByPk(n);Object(a.expect)(o).to.be.equal(!0);const l=await r.UserController.setSuperuser({},{id:n,value:!1});Object(a.expect)(l).to.be.equal(!0);const{superuser:d}=await y.findByPk(n);Object(a.expect)(d).to.be.equal(!1),t.destroy()}))})),describe("Controller -> Set User Password",(function(){it("Admin API -> Set the selected user's password",(async function(){const e=Object(u.generateTestUser)({superuser:!1}),t=c.internet.password(),{id:n}=await y.create(e),s=await r.UserController.setUserPassword({},{id:n,value:t});Object(a.expect)(s).to.be.equal(!0);const i=await y.findByPk(n);Object(a.expect)(await i.isPasswordValid(t)).to.be.equal(!0),i.destroy()}))})),describe("Controller -> Signup",(function(){it("User API -> Signup a password account",(async function(){const e=Object(u.generateTestUser)(),t=c.internet.password(),n=await r.UserController.signup({},{...e,password:t}),s=await y.findOne({where:{email:e.email.toLowerCase()}});Object(a.expect)(s).to.deep.include({...e,email:e.email.toLowerCase()});const i=d.a.verify(n.token,process.env.JWT_SECRET,{expiresIn:process.env.AUTH_SESSION_DURATION,algorithm:["RS256"]});Object(a.expect)(n.maxAge).to.be.equal(Number(process.env.AUTH_SESSION_DURATION)),Object(a.expect)(n.userId).to.be.equal(s.id),Object(a.expect)(i.id).to.be.equal(s.id),Object(a.expect)(i.email).to.be.equal(s.email),Object(a.expect)(i.username).to.be.equal(s.username),s.destroy(),n.destroy()}))})),describe("Controller -> Login",(function(){it("User API -> Login authorized using email and password",(async function(){const e=Object(u.generateTestUser)(),t=c.internet.password(),n=await y.create(e);await n.setPassword(t);const s=await r.UserController.login({},{email:e.email,password:t}),i=d.a.verify(s.token,process.env.JWT_SECRET,{expiresIn:process.env.AUTH_SESSION_DURATION,algorithm:["RS256"]});Object(a.expect)(s.maxAge).to.be.equal(Number(process.env.AUTH_SESSION_DURATION)),Object(a.expect)(s.userId).to.be.equal(n.id),Object(a.expect)(i.id).to.be.equal(n.id),Object(a.expect)(i.email).to.be.equal(n.email),Object(a.expect)(i.username).to.be.equal(n.username),s.destroy(),n.destroy()})),it("User API -> Login forbidden using bad email",(async function(){const e=Object(u.generateTestUser)(),t=c.internet.password(),n=await y.create(e);await n.setPassword(t);try{await r.UserController.login({},{email:"somerandomstring@gmail.com",password:t}),a.assert.notOk(!0,"no error has been raised")}catch(e){Object(a.assert)(e instanceof p.c,!0,"Should raise a validation Error")}n.destroy()})),it("User API -> Login forbidden using bad password",(async function(){const e=Object(u.generateTestUser)(),t=c.internet.password(),n=await y.create(e);await n.setPassword(t);try{await r.UserController.login({},{email:e.email,password:"somerandompwd"}),a.assert.notOk(!0,"no error has been raised")}catch(e){Object(a.assert)(e instanceof p.c,!0,"Should raise a validation Error")}n.destroy()}))})),describe("Controller -> Update Me",(function(){it("User API -> The current user is successfully updated",(async function(){const e=Object(u.generateTestUser)(),t=await y.create(e),{id:n}=t,s=Object(u.generateTestUser)(),i=await r.UserController.updateMe({},{input:s},{user:t});Object(a.expect)(i).to.deep.include({id:n,...s,email:s.email.toLowerCase()}),i.destroy()}))})),describe("Controller -> setMyPassword",(function(){it("User API -> Set first time password for current user (user has been created passwordless)",(async function(){const e=Object(u.generateTestUser)(),t=await y.create(e),n=c.internet.password(),s=await r.UserController.setMyPassword({},{newPassword:n},{user:t});Object(a.expect)(s).to.be.equal(!0);const i=await y.findOne({where:{id:t.id}});Object(a.expect)(await i.isPasswordValid(n)).to.be.equal(!0),t.destroy()})),it("User API -> Change current users password is allowed",(async function(){const e=Object(u.generateTestUser)(),t=c.internet.password(),n=await y.create(e);await n.setPassword(t);const s=c.internet.password(),i=await r.UserController.setMyPassword({},{oldPassword:t,newPassword:s},{user:n});Object(a.expect)(i).to.be.equal(!0);const o=await y.findOne({where:{id:n.id}});Object(a.expect)(await o.isPasswordValid(s)).to.be.equal(!0),n.destroy()})),it("User API -> Change current users password is not allowed",(async function(){const e=Object(u.generateTestUser)(),t=c.internet.password(),n=await y.create(e);await n.setPassword(t);const s=c.internet.password(),i=await r.UserController.setMyPassword({},{oldPassword:"badguess",newPassword:s},{user:n});Object(a.expect)(i).to.be.equal(!1);const o=await y.findOne({where:{id:n.id}});Object(a.expect)(await o.isPasswordValid(s)).to.be.equal(!1),n.destroy()}))}))}))},function(e,t){e.exports={up:async function(e,t){return e.createTable("business_shops",{id:{type:t.DataTypes.UUID,primaryKey:!0,allowNull:!1},name:{type:t.DataTypes.STRING,allowNull:!1},slug:{type:t.DataTypes.STRING,allowNull:!1},publicPhoneNumber:{type:t.DataTypes.BIGINT},privatePhoneNumber:{type:t.DataTypes.BIGINT},address:{type:t.DataTypes.STRING},address2:{type:t.DataTypes.STRING},city:{type:t.DataTypes.STRING,allowNull:!1},postcode:{type:t.DataTypes.STRING,allowNull:!1},country:{type:t.DataTypes.STRING,allowNull:!1},regularOpeningTimes:{type:t.DataTypes.JSON,defaultValue:{1:!1,2:!1,3:!1,4:!1,5:!1,6:!1,7:!1}},specialOpeningTimes:{type:t.DataTypes.JSON},data:{type:t.DataTypes.JSON},createdAt:{type:t.DataTypes.DATE,allowNull:!1},updatedAt:{type:t.DataTypes.DATE,allowNull:!1}})},down:async function(e,t){return e.dropTable("business_shops")}}},function(e,t){e.exports={up:async function(e,t){return e.addColumn("business_shops","ownerId",{type:t.DataTypes.UUID,references:{model:"users",key:"id"},onUpdate:"CASCADE",onDelete:"SET NULL"})},down:async function(e,t){return e.removeColumn("business_shops","ownerId")}}},function(e,t){e.exports={up:async function(e,t){return e.addColumn("business_shops","siteId",{type:t.DataTypes.UUID,references:{model:"websites",key:"id"},onUpdate:"CASCADE",onDelete:"SET NULL"})},down:async function(e,t){return e.removeColumn("business_shops","siteId")}}},function(e,t){const n="business_shops_index_name_city";e.exports={up:async function(e,t){return e.addIndex("business_shops",{name:n,fields:["city","name"],unique:!0})},down:async function(e,t){return e.removeIndex("business_shops",n)}}},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),s=n(19),i=n.n(s),o=n(15),l=n(4),d=(n(2),n(17)),c=n(9),u=n(5);r.a.use(i.a);const{assert:p,expect:y}=r.a,g=l.default.Shop,m={generateData:()=>Object(c.generateTestUser)(),model:l.default.User,foreignKey:"ownerId",references:"id",as:"user"},f={generateData:()=>Object(u.generateTestSite)(),model:l.default.Site,foreignKey:"siteId",references:"id",as:"website"};describe("Business -> Shop Model",(function(){})),describe("Business -> Shop Controller",(function(){describe("Controller -> Get all",(function(){it("Admin API -> The objects retrieved equals the objects looked fori, with no association",(async function(){const e=Object(d.generateTestShop)(),t=Object(d.generateTestShop)(),n=await g.bulkCreate([e,t],{});y(n[0]).to.deep.include(e),y(n[1]).to.deep.include(t);const{id:a}=n[0],{id:r}=n[1],s=await o.ShopController.all({}),i=s.find(e=>e.id===a),l=s.find(e=>e.id===r);p.exists(i.id,"We shouldnt deep test inclusion of empty item"),p.exists(l.id,"We shouldnt deep test inclusion of empty item"),y(i).to.deep.include(e),y(l).to.deep.include(t),n.forEach(e=>e.destroy())})),it("Admin API -> The objects retrieved equals the objects looked for, including associations",(async function(){const e=await m.model.create(m.generateData(),{plain:!0}),t=await m.model.create(m.generateData(),{plain:!0}),n=await f.model.create(f.generateData(),{plain:!0}),a=await f.model.create(f.generateData(),{plain:!0}),r=Object(d.generateTestShop)({[m.foreignKey]:e[m.references],[f.foreignKey]:n[f.references]}),s=Object(d.generateTestShop)({[m.foreignKey]:t[m.references],[f.foreignKey]:a[f.references]}),i=await g.bulkCreate([r,s],{});y(i[0]).to.deep.include(r),y(i[1]).to.deep.include(s);const{id:l}=i[0],{id:c}=i[1],u=await o.ShopController.all({}),h=u.find(e=>e.id===l),T=u.find(e=>e.id===c);p.exists(h.id,"We shouldnt deep test inclusion of empty item"),p.exists(T.id,"We shouldnt deep test inclusion of empty item"),y(h).to.deep.include({...r,[m.as]:e.dataValues,[f.as]:n.dataValues}),y(T).to.deep.include({...s,[m.as]:t.dataValues,[f.as]:a.dataValues}),i.forEach(e=>e.destroy()),e.destroy(),t.destroy(),n.destroy(),a.destroy()}))})),describe("Controller -> Get one",(function(){it("Admin API -> The object retrieved correspond to the objects looked for, with no association",(async function(){const e=Object(d.generateTestShop)(),{id:t}=await g.create(e),n=await o.ShopController.get({},{id:t});y(n).to.deep.include({id:t,...e}),n.destroy()})),it("Admin API -> The object retrieved correspond to the objects looked for, including associations",(async function(){const e=await m.model.create(m.generateData(),{plain:!0}),t=await f.model.create(f.generateData(),{plain:!0}),n=Object(d.generateTestShop)({[m.foreignKey]:e[m.references],[f.foreignKey]:t[f.references]}),{id:a}=await g.create(n),r=await o.ShopController.get({},{id:a});y(r).to.deep.include({id:a,...n}),y(r[m.as].dataValues).to.deep.include(e.dataValues),y(r[f.as].dataValues).to.deep.include(t.dataValues),r.destroy(),e.destroy(),t.destroy()}))})),describe("Controller -> Add",(function(){it("Admin API -> The object created equals the specs given, with no association",(async function(){const e=Object(d.generateTestShop)(),t=await o.ShopController.add({},{input:e});y(t).to.deep.include(e),t.destroy()})),it("Admin API -> The object created equals the specs given, including associations",(async function(){const e=await m.model.create(m.generateData(),{plain:!0}),t=await f.model.create(f.generateData(),{plain:!0}),n=Object(d.generateTestShop)({[m.foreignKey]:e[m.references],[f.foreignKey]:t[f.references]}),a=await o.ShopController.add({},{input:n});y(a).to.deep.include(n),a.destroy(),e.destroy(),t.destroy()}))})),describe("Controller -> Update",(function(){it("Admin API -> The object is successfully updated, with no association",(async function(){const e=Object(d.generateTestShop)(),{id:t}=await g.create(e),n=Object(d.generateTestShop)(),a=await o.ShopController.update({},{id:t,input:n});y(a).to.deep.include({id:t,...n}),a.destroy()})),it("Admin API -> The object is successfully updated, with associations",(async function(){const e=await m.model.create(m.generateData(),{plain:!0}),t=await f.model.create(f.generateData(),{plain:!0}),n=Object(d.generateTestShop)({[m.foreignKey]:e[m.references],[f.foreignKey]:t[f.references]}),{id:a}=await g.create(n),r=Object(d.generateTestShop)(),s=await o.ShopController.update({},{id:a,input:r});y(s).to.deep.include({id:a,...r}),s.destroy(),e.destroy(),t.destroy()}))})),describe("Controller -> Delete",(function(){it("Admin API -> The object is successfully deleted",(async function(){const e=Object(d.generateTestShop)(),{id:t}=await g.create(e),n=await o.ShopController.delete({},{id:t});p(n===t,`The controller should respond ${t} to the deletion command`),await g.findByPk(t,{transaction:null});const a=await g.findByPk(t,{transaction:null});y(a).to.equal(null)}))}))}))},function(e,t){e.exports={up:async function(e,t){return e.createTable("makes",{id:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},name:{type:t.DataTypes.STRING,allowNull:!1,unique:!0},slug:{type:t.DataTypes.STRING,allowNull:!1,unique:!0},activeFrom:{type:t.DataTypes.STRING},activeTo:{type:t.DataTypes.STRING},country:{type:t.DataTypes.STRING},isCommon:{type:t.DataTypes.BOOLEAN,allowNull:!1},isActive:{type:t.DataTypes.BOOLEAN,allowNull:!1},car:{type:t.DataTypes.BOOLEAN,allowNull:!1},motorcycle:{type:t.DataTypes.BOOLEAN,allowNull:!1},seotext:{type:t.DataTypes.TEXT},createdAt:{type:t.DataTypes.DATE,allowNull:!1},updatedAt:{type:t.DataTypes.DATE,allowNull:!1}})},down:async function(e,t){return e.dropTable("makes")}}},function(e,t){e.exports={up:async function(e,t){return e.createTable("services",{id:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},name:{type:t.DataTypes.STRING,allowNull:!1,unique:!0},slug:{type:t.DataTypes.STRING,allowNull:!1,unique:!0},category:{type:t.DataTypes.STRING},isActive:{type:t.DataTypes.BOOLEAN,allowNull:!1},car:{type:t.DataTypes.BOOLEAN,allowNull:!1},motorcycle:{type:t.DataTypes.BOOLEAN,allowNull:!1},genericCta:{type:t.DataTypes.TEXT},carButton:{type:t.DataTypes.STRING},motoButton:{type:t.DataTypes.STRING},seotext:{type:t.DataTypes.TEXT},icon:{type:t.DataTypes.STRING},createdAt:{type:t.DataTypes.DATE,allowNull:!1},updatedAt:{type:t.DataTypes.DATE,allowNull:!1}})},down:async function(e,t){return e.dropTable("services")}}},function(e,t,n){"use strict";n.r(t);var a=n(48),r=n.n(a);const s=new r.a.Schema({name:{type:String,unique:!0},slug:String,active_from:String,active_to:String,country:String,is_common:Boolean,is_active:Boolean,car:Boolean,motorcycle:Boolean,seotext:String}),i=new r.a.model("make",s);t.default=i},function(e,t,n){"use strict";n.r(t);var a=n(48),r=n.n(a);const s=new r.a.Schema({name:{type:String,unique:!0},category:String,seotext:String,is_active:{type:Boolean,default:1},car:{type:Boolean},motorcycle:{type:Boolean},slug:String,generic_cta:String,carbutton:String,motobutton:String,invisible:{type:Boolean,default:0},icon:String}),i=new r.a.model("service",s);t.default=i},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n(12),s=n(4),i=(n(2),n(16));const o=s.default.Make;describe("Car -> Make Controller",(function(){before((function(){})),beforeEach((function(){})),describe("Controller -> Get all",(function(){it("Admin API -> The objects retrieved equals the objects looked for",(async function(){const e=Object(i.generateTestMake)(),t=Object(i.generateTestMake)(),n=await o.bulkCreate([e,t],{});Object(a.expect)(n[0]).to.deep.include(e),Object(a.expect)(n[1]).to.deep.include(t);const{id:s}=n[0],{id:l}=n[1],d=await r.MakeController.all({}),c=d.find(e=>e.id===s),u=d.find(e=>e.id===l);a.assert.exists(c.id,"We shouldnt deep test inclusion of empty item"),a.assert.exists(u.id,"We shouldnt deep test inclusion of empty item"),Object(a.expect)(c).to.deep.include(e),Object(a.expect)(u).to.deep.include(t),n.forEach(e=>e.destroy())}))})),describe("Controller -> Get one",(function(){it("Admin API -> The object retrieved correspond to the objects looked for",(async function(){const e=Object(i.generateTestMake)(),{id:t}=await o.create(e),n=await r.MakeController.get({},{id:t});Object(a.expect)(n).to.deep.include({id:t,...e}),n.destroy()}))})),describe("Controller -> Add",(function(){it("Admin API -> The object created equals the specs given",(async function(){const e=Object(i.generateTestMake)(),t=await r.MakeController.add({},{input:e});Object(a.expect)(t).to.deep.include(e),t.destroy()}))})),describe("Controller -> Update",(function(){it("Admin API -> The object is successfully updated",(async function(){const e=Object(i.generateTestMake)(),{id:t}=await o.create(e),n=Object(i.generateTestMake)(),s=await r.MakeController.update({},{id:t,input:n});Object(a.expect)(s).to.deep.include({id:t,...n}),s.destroy()}))})),describe("Controller -> Delete",(function(){it("Admin API -> The object is successfully deleted",(async function(){const e=Object(i.generateTestMake)(),{id:t}=await o.create(e),n=await r.MakeController.delete({},{id:t});Object(a.assert)(n===t,"The controller should respond true to the deletion command"),await o.findByPk(t,{transaction:null});const s=await o.findByPk(t,{transaction:null});Object(a.expect)(s).to.equal(null)}))})),afterEach((function(){})),after((function(){}))}))},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n(12),s=n(4),i=(n(2),n(16));const o=s.default.Service;describe("Car -> Service Controller",(function(){before((function(){})),beforeEach((function(){})),describe("Controller -> Get all",(function(){it("Admin API -> The objects retrieved equals the objects looked for",(async function(){const e=Object(i.generateTestService)(),t=Object(i.generateTestService)(),n=await o.bulkCreate([e,t],{});Object(a.expect)(n[0]).to.deep.include(e),Object(a.expect)(n[1]).to.deep.include(t);const{id:s}=n[0],{id:l}=n[1],d=await r.ServiceController.all({}),c=d.find(e=>e.id===s),u=d.find(e=>e.id===l);a.assert.exists(c.id,"We shouldnt deep test inclusion of empty item"),a.assert.exists(u.id,"We shouldnt deep test inclusion of empty item"),Object(a.expect)(c).to.deep.include(e),Object(a.expect)(u).to.deep.include(t),n.forEach(e=>e.destroy())}))})),describe("Controller -> Get one",(function(){it("Admin API -> The object retrieved correspond to the objects looked for",(async function(){const e=Object(i.generateTestService)(),{id:t}=await o.create(e),n=await r.ServiceController.get({},{id:t});Object(a.expect)(n).to.deep.include({id:t,...e}),n.destroy()}))})),describe("Controller -> Add",(function(){it("Admin API -> The object created equals the specs given",(async function(){const e=Object(i.generateTestService)(),t=await r.ServiceController.add({},{input:e});Object(a.expect)(t).to.deep.include(e),t.destroy()}))})),describe("Controller -> Update",(function(){it("Admin API -> The object is successfully updated",(async function(){const e=Object(i.generateTestService)(),{id:t}=await o.create(e),n=Object(i.generateTestService)(),s=await r.ServiceController.update({},{id:t,input:n});Object(a.expect)(s).to.deep.include({id:t,...n}),s.destroy()}))})),describe("Controller -> Delete",(function(){it("Admin API -> The object is successfully deleted",(async function(){const e=Object(i.generateTestService)(),{id:t}=await o.create(e),n=await r.ServiceController.delete({},{id:t});Object(a.assert)(n===t,"The controller should respond true to the deletion command"),await o.findByPk(t,{transaction:null});const s=await o.findByPk(t,{transaction:null});Object(a.expect)(s).to.equal(null)}))})),afterEach((function(){})),after((function(){}))}))},function(e,t){e.exports={up:async function(e,t){return e.createTable("dictionary_authors",{id:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},name:{type:t.DataTypes.STRING,allowNull:!1},slug:{type:t.DataTypes.STRING,allowNull:!1,unique:!0},altName:{type:t.DataTypes.STRING},publicPicture:{type:t.DataTypes.TEXT},authorityLink:{type:t.DataTypes.TEXT},publicLink:{type:t.DataTypes.TEXT},description:{type:t.DataTypes.TEXT},data:{type:t.DataTypes.JSON},createdAt:{type:t.DataTypes.DATE,allowNull:!1},updatedAt:{type:t.DataTypes.DATE,allowNull:!1}})},down:async function(e,t){return e.dropTable("dictionary_authors")}}},function(e,t){e.exports={up:async function(e,t){return e.createTable("dictionary_expressions",{id:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},name:{type:t.DataTypes.TEXT,allowNull:!1},slug:{type:t.DataTypes.STRING,allowNull:!1,unique:!0},sourceName:{type:t.DataTypes.STRING},sourceLink:{type:t.DataTypes.TEXT},date:{type:t.DataTypes.DATE},location:{type:t.DataTypes.STRING},attributes:{type:t.DataTypes.TEXT},definition:{type:t.DataTypes.TEXT},usage:{type:t.DataTypes.TEXT},isActive:{type:t.DataTypes.BOOLEAN,allowNull:!1},data:{type:t.DataTypes.JSON},createdAt:{type:t.DataTypes.DATE,allowNull:!1},updatedAt:{type:t.DataTypes.DATE,allowNull:!1}})},down:async function(e,t){return e.dropTable("dictionary_expressions")}}},function(e,t){e.exports={up:async function(e,t){return e.createTable("dictionary_tags",{id:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},name:{type:t.DataTypes.STRING,allowNull:!1},slug:{type:t.DataTypes.STRING,allowNull:!1},data:{type:t.DataTypes.JSON},createdAt:{type:t.DataTypes.DATE,allowNull:!1},updatedAt:{type:t.DataTypes.DATE,allowNull:!1}})},down:async function(e,t){return e.dropTable("dictionary_tags")}}},function(e,t){e.exports={up:async function(e,t){return e.addColumn("dictionary_expressions","authorId",{type:t.DataTypes.UUID,references:{model:"dictionary_authors",key:"id"},onUpdate:"CASCADE",onDelete:"CASCADE"})},down:async function(e,t){return e.removeColumn("dictionary_expressions","authorId")}}},function(e,t){e.exports={up:async function(e,t){return e.createTable("dictionary_expressions_tags",{tagId:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},expressionId:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},createdAt:{type:t.DataTypes.DATE,allowNull:!1},updatedAt:{type:t.DataTypes.DATE,allowNull:!1}})},down:async function(e,t){return e.dropTable("dictionary_expressions_tags")}}},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),s=n(19),i=n.n(s),o=n(8),l=n(4),d=(n(2),n(10));r.a.use(i.a);const{assert:c,expect:u}=r.a,p=l.default.DictionaryAuthor;describe("Dictionary -> Author Model",(function(){})),describe("Dictionary -> Author Controller",(function(){describe("Controller -> Get all",(function(){it("Admin API -> The objects retrieved equals the objects looked for",(async function(){const e=Object(d.generateTestAuthor)(),t=Object(d.generateTestAuthor)(),n=await p.bulkCreate([e,t],{});u(n[0]).to.deep.include(e),u(n[1]).to.deep.include(t);const{id:a}=n[0],{id:r}=n[1],s=await o.AuthorController.all({}),i=s.find(e=>e.id===a),l=s.find(e=>e.id===r);c.exists(i.id,"We shouldnt deep test inclusion of empty item"),c.exists(l.id,"We shouldnt deep test inclusion of empty item"),u(i).to.deep.include(e),u(l).to.deep.include(t),n.forEach(e=>e.destroy())}))})),describe("Controller -> Get one",(function(){it("Admin API -> The object retrieved correspond to the objects looked for",(async function(){const e=Object(d.generateTestAuthor)(),{id:t}=await p.create(e),n=await o.AuthorController.get({},{id:t});u(n).to.deep.include({id:t,...e}),n.destroy()}))})),describe("Controller -> Add",(function(){it("Admin API -> The object created equals the specs given",(async function(){const e=Object(d.generateTestAuthor)(),t=await o.AuthorController.add({},{input:e});u(t).to.deep.include(e),t.destroy()}))})),describe("Controller -> Update",(function(){it("Admin API -> The object is successfully updated",(async function(){const e=Object(d.generateTestAuthor)(),{id:t}=await p.create(e),n=Object(d.generateTestAuthor)(),a=await o.AuthorController.update({},{id:t,input:n});u(a).to.deep.include({id:t,...n}),a.destroy()}))})),describe("Controller -> Delete",(function(){it("Admin API -> The object is successfully deleted",(async function(){const e=Object(d.generateTestAuthor)(),{id:t}=await p.create(e),n=await o.AuthorController.delete({},{id:t});c(n===t,`The controller should respond ${t} to the deletion command`),await p.findByPk(t,{transaction:null});const a=await p.findByPk(t,{transaction:null});u(a).to.equal(null)}))}))}))},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),s=n(19),i=n.n(s),o=n(8),l=n(4),d=(n(2),n(10));r.a.use(i.a);const{assert:c,expect:u}=r.a,p=l.default.DictionaryExpression,y={generateData:()=>Object(d.generateTestAuthor)(),model:l.default.DictionaryAuthor,foreignKey:"authorId",references:"id",as:"author"};describe("Dictionary -> Expression Model",(function(){})),describe("Dictionary -> Expression Controller",(function(){describe("Controller -> Get all",(function(){it("Admin API -> The objects retrieved equals the objects looked for, with no association",(async function(){const e=Object(d.generateTestExpression)({date:new Date}),t=Object(d.generateTestExpression)({date:new Date}),n=await p.bulkCreate([e,t],{}),{id:a}=n[0],{id:r}=n[1],s=await o.ExpressionController.all({}),i=s.find(e=>e.id===a),l=s.find(e=>e.id===r);c.exists(i.id,"We shouldnt deep test inclusion of empty item"),c.exists(l.id,"We shouldnt deep test inclusion of empty item"),u(i).to.deep.include(e),u(l).to.deep.include(t),n.forEach(e=>e.destroy())})),it("Admin API -> The objects retrieved equals the objects looked for, including associations",(async function(){const e=await y.model.create(y.generateData(),{plain:!0}),t=await y.model.create(y.generateData(),{plain:!0}),n=Object(d.generateTestExpression)({date:new Date,[y.foreignKey]:e[y.references]}),a=Object(d.generateTestExpression)({date:new Date,[y.foreignKey]:t[y.references]}),r=await p.bulkCreate([n,a],{}),{id:s}=r[0],{id:i}=r[1],l=await o.ExpressionController.all({}),g=l.find(e=>e.id===s),m=l.find(e=>e.id===i);c.exists(g.id,"We shouldnt deep test inclusion of empty item"),c.exists(m.id,"We shouldnt deep test inclusion of empty item"),u(g).to.deep.include({...n,[y.as]:e.dataValues}),u(m).to.deep.include({...a,[y.as]:t.dataValues}),r.forEach(e=>e.destroy()),e.destroy(),t.destroy()}))})),describe("Controller -> Get one",(function(){it("Admin API -> The object retrieved correspond to the objects looked for, with no association",(async function(){const e=Object(d.generateTestExpression)(),{id:t}=await p.create(e),n=await o.ExpressionController.get({},{id:t});u(n).to.deep.include({id:t,...e}),n.destroy()})),it("Admin API -> The object retrieved correspond to the objects looked for, including associations",(async function(){const e=await y.model.create(y.generateData(),{plain:!0}),t=Object(d.generateTestExpression)({[y.foreignKey]:e[y.references]}),{id:n}=await p.create(t),a=await o.ExpressionController.get({},{id:n});u(a).to.deep.include({id:n,...t}),u(a[y.as].dataValues).to.deep.include(e.dataValues),a.destroy(),e.destroy()}))})),describe("Controller -> Add",(function(){it("Admin API -> The object created equals the specs given, with no association",(async function(){const e=Object(d.generateTestExpression)(),t=await o.ExpressionController.add({},{input:e});u(t).to.deep.include(e),t.destroy()})),it("Admin API -> The object created equals the specs given, including associations",(async function(){const e=await y.model.create(y.generateData(),{plain:!0}),t=Object(d.generateTestExpression)({[y.foreignKey]:e[y.references]}),n=await o.ExpressionController.add({},{input:t});u(n).to.deep.include(t),n.destroy(),e.destroy()}))})),describe("Controller -> Update",(function(){it("Admin API -> The object is successfully updated, with no association",(async function(){const e=Object(d.generateTestExpression)(),{id:t}=await p.create(e),n=Object(d.generateTestExpression)(),a=await o.ExpressionController.update({},{id:t,input:n});u(a).to.deep.include({id:t,...n}),a.destroy()})),it("Admin API -> The object is successfully updated, with associations",(async function(){const e=await y.model.create(y.generateData(),{plain:!0}),t=Object(d.generateTestExpression)({[y.foreignKey]:e[y.references]}),{id:n}=await p.create(t),a=Object(d.generateTestExpression)(),r=await o.ExpressionController.update({},{id:n,input:a});u(r).to.deep.include({id:n,...a}),r.destroy(),e.destroy()}))})),describe("Controller -> Delete",(function(){it("Admin API -> The object is successfully deleted",(async function(){const e=Object(d.generateTestExpression)(),{id:t}=await p.create(e),n=await o.ExpressionController.delete({},{id:t});c(n===t,`The controller should respond ${t} to the deletion command`),await p.findByPk(t,{transaction:null});const a=await p.findByPk(t,{transaction:null});u(a).to.equal(null)}))}))}))},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),s=n(19),i=n.n(s),o=n(8),l=n(4),d=(n(2),n(10));r.a.use(i.a);const{assert:c,expect:u}=r.a,p=l.default.DictionaryTag;describe("Dictionary -> Tag Model",(function(){})),describe("Dictionary -> Tag Controller",(function(){describe("Controller -> Get all",(function(){it("Admin API -> The objects retrieved equals the objects looked for",(async function(){const e=Object(d.generateTestTag)(),t=Object(d.generateTestTag)(),n=await p.bulkCreate([e,t],{});u(n[0]).to.deep.include(e),u(n[1]).to.deep.include(t);const{id:a}=n[0],{id:r}=n[1],s=await o.TagController.all({}),i=s.find(e=>e.id===a),l=s.find(e=>e.id===r);c.exists(i.id,"We shouldnt deep test inclusion of empty item"),c.exists(l.id,"We shouldnt deep test inclusion of empty item"),u(i).to.deep.include(e),u(l).to.deep.include(t),n.forEach(e=>e.destroy())}))})),describe("Controller -> Get one",(function(){it("Admin API -> The object retrieved correspond to the objects looked for",(async function(){const e=Object(d.generateTestTag)(),{id:t}=await p.create(e),n=await o.TagController.get({},{id:t});u(n).to.deep.include({id:t,...e}),n.destroy()}))})),describe("Controller -> Add",(function(){it("Admin API -> The object created equals the specs given",(async function(){const e=Object(d.generateTestTag)(),t=await o.TagController.add({},{input:e});u(t).to.deep.include(e),t.destroy()}))})),describe("Controller -> Update",(function(){it("Admin API -> The object is successfully updated",(async function(){const e=Object(d.generateTestTag)(),{id:t}=await p.create(e),n=Object(d.generateTestTag)(),a=await o.TagController.update({},{id:t,input:n});u(a).to.deep.include({id:t,...n}),a.destroy()}))})),describe("Controller -> Delete",(function(){it("Admin API -> The object is successfully deleted",(async function(){const e=Object(d.generateTestTag)(),{id:t}=await p.create(e),n=await o.TagController.delete({},{id:t});c(n===t,`The controller should respond ${t} to the deletion command`),await p.findByPk(t,{transaction:null});const a=await p.findByPk(t,{transaction:null});u(a).to.equal(null)}))}))}))},function(e){e.exports=JSON.parse("[]")},function(e,t){e.exports={up:async function(e,t){return e.createTable("food_fruits",{id:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},name:{type:t.DataTypes.STRING,allowNull:!1,unique:!0},taste:{type:t.DataTypes.STRING}})},down:async function(e,t){return e.dropTable("food_fruits")}}},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),s=n(19),i=n.n(s),o=n(20),l=n(4),d=(n(2),n(21));r.a.use(i.a);const{assert:c,expect:u}=r.a,p=l.default.Fruit;describe("FOOD -> Fruit Model",(function(){describe("Model -> Key -> Code",(function(){it("Default Value -> The default code is a unique 64 char string",(async function(){const e=Object(d.generateTestFruit)(),t=Object(d.generateTestFruit)(),n=await p.bulkCreate([e,t]),{code:a}=n[0],{code:r}=n[1];u(a).to.have.lengthOf(64),u(r).to.have.lengthOf(64),u(a).to.not.deep.equal(r),n.forEach(e=>e.destroy())}))})),describe("Model -> Virtual -> IsValid",(function(){it("Model API -> An instance is valid ioi it expires later than now",(async function(){const e=Object(d.generateTestFruit)(),t=Object(d.generateTestFruit)({expires:Date.now()-Number(2e5)}),n=await p.bulkCreate([e,t]);u(n[0].is_valid).to.equal(!0),u(n[1].is_valid).to.equal(!1),n.forEach(e=>e.destroy())}))}))})),describe("FOOD -> Fruit Controller",(function(){describe("Controller -> Get all",(function(){it("Admin API -> The objects retrieved equals the objects looked for",(async function(){const e=Object(d.generateTestFruit)(),t=Object(d.generateTestFruit)(),n=await p.bulkCreate([e,t],{}),{id:a}=n[0],{id:r}=n[1],s=await o.FruitController.all({}),i=s.find(e=>e.id===a),l=s.find(e=>e.id===r);c.exists(i.id,"We shouldnt deep test inclusion of empty item"),c.exists(l.id,"We shouldnt deep test inclusion of empty item"),u(i).to.deep.include(e),u(l).to.deep.include(t),n.forEach(e=>e.destroy())}))})),describe("Controller -> Get one",(function(){it("Admin API -> The object retrieved correspond to the objects looked for",(async function(){const e=Object(d.generateTestFruit)(),{id:t}=await p.create(e),n=await o.FruitController.get({},{id:t});u(n).to.deep.include({id:t,...e}),n.destroy()}))})),describe("Controller -> Add",(function(){it("Admin API -> The object created equals the specs given",(async function(){const e=Object(d.generateTestFruit)(),t=await o.FruitController.add({},{input:e});u(t).to.deep.include(e),t.destroy()}))})),describe("Controller -> Update",(function(){it("Admin API -> The object is successfully updated",(async function(){const e=Object(d.generateTestFruit)(),{id:t}=await p.create(e),n=Object(d.generateTestFruit)(),a=await o.FruitController.update({},{id:t,input:n});u(a).to.deep.include({id:t,...n}),a.destroy()}))})),describe("Controller -> Delete",(function(){it("Admin API -> The object is successfully deleted",(async function(){const e=Object(d.generateTestFruit)(),{id:t}=await p.create(e),n=await o.FruitController.delete({},{id:t});c(n===t,`The controller should respond ${t} to the deletion command`),await p.findByPk(t,{transaction:null});const a=await p.findByPk(t,{transaction:null});u(a).to.equal(null)}))}))}))},function(e,t){e.exports={up:async function(e,t){return e.createTable("oauth2_profiles",{id:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},refreshToken:{type:t.DataTypes.STRING},provider:{type:t.DataTypes.STRING},picture:{type:t.DataTypes.TEXT},scope:{type:t.DataTypes.STRING},locale:{type:t.DataTypes.STRING},name:{type:t.DataTypes.STRING},email:{type:t.DataTypes.STRING},emailVerified:{type:t.DataTypes.BOOLEAN},expires:{type:t.DataTypes.DATE},createdAt:{type:t.DataTypes.DATE,allowNull:!1},updatedAt:{type:t.DataTypes.DATE,allowNull:!1}})},down:async function(e,t){return e.dropTable("oauth2_profiles")}}},function(e,t){e.exports={up:async function(e,t){return e.createTable("oauth2_setters",{id:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},expires:{type:t.DataTypes.DATE},useToLogin:{type:t.DataTypes.BOOLEAN,allowNull:!1},code:{type:t.DataTypes.STRING,allowNull:!1,unique:!0},provider:{type:t.DataTypes.STRING},createdAt:{type:t.DataTypes.DATE,allowNull:!1},updatedAt:{type:t.DataTypes.DATE,allowNull:!1}})},down:async function(e,t){return e.dropTable("oauth2_setters")}}},function(e,t){e.exports={up:async function(e,t){return e.addColumn("oauth2_profiles","userId",{type:t.DataTypes.UUID,references:{model:"users",key:"id"},onUpdate:"CASCADE",onDelete:"CASCADE"})},down:async function(e,t){return e.removeColumn("oauth2_profiles","userId")}}},function(e,t){e.exports={up:async function(e,t){return e.addColumn("oauth2_setters","userId",{type:t.DataTypes.UUID,references:{model:"users",key:"id"},onUpdate:"CASCADE",onDelete:"CASCADE"})},down:async function(e,t){return e.removeColumn("oauth2_setters","userId")}}},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n(14),s=n(4),i=(n(2),n(13)),o=n(9);const l=s.default.OAuth2Setter,d={generateData:()=>Object(o.generateTestUser)(),model:s.default.User,foreignKey:"userId",references:"id",as:"user"};describe("OAuth2 -> OAuth2Setter Model",(function(){describe("Model -> Key -> Code",(function(){it("Default Value -> The default code is a unique 64 char string",(async function(){const e=Object(i.generateTestSetter)(),t=Object(i.generateTestSetter)(),n=await l.bulkCreate([e,t]),{code:r}=n[0],{code:s}=n[1];Object(a.expect)(r).to.have.lengthOf(64),Object(a.expect)(s).to.have.lengthOf(64),Object(a.expect)(r).to.not.deep.equal(s),n.forEach(e=>e.destroy())}))})),describe("Model -> Virtual -> IsValid",(function(){it("Model API -> An instance is valid ioi it expires later than now",(async function(){const e=Object(i.generateTestSetter)(),t=Object(i.generateTestSetter)({expires:Date.now()-Number(2e5)}),n=await l.bulkCreate([e,t]);Object(a.expect)(n[0].isValid).to.equal(!0),Object(a.expect)(n[1].isValid).to.equal(!1),n.forEach(e=>e.destroy())}))})),describe("Model -> Instance Method -> Login",(function(){it("Model API -> When we login a valid instance, it should be not valid anymore",(async function(){const e=Object(i.generateTestSetter)({useToLogin:!0}),t=Object(i.generateTestSetter)({useToLogin:!1}),n=Object(i.generateTestSetter)({useToLogin:!0,expires:Date.now()-Number(2e5)}),r=await l.bulkCreate([e,t,n]),[s,o,d]=r;Object(a.expect)(await s.login()).to.equal(!0),Object(a.expect)(await o.login()).to.equal(!1),Object(a.expect)(await d.login()).to.equal(!1),Object(a.expect)(await s.useToLogin).to.equal(!1),r.forEach(e=>{e.destroy()})}))})),describe("Model -> Class Method -> Clean",(function(){it("Model API -> After using the clean method, we shouldnt have any expired objects in the database",(async function(){const e=Object(i.generateTestSetter)({useToLogin:!0,expires:Date.now()-1}),t=Object(i.generateTestSetter)({useToLogin:!0,expires:Date.now()-10}),n=Object(i.generateTestSetter)({useToLogin:!0,expires:Date.now()-Number(2e5)}),r=await l.bulkCreate([e,t,n]),[s,o,d]=r;await l.clean(),await l.findByPk(s.id);const c=await l.findByPk(s.id),u=await l.findByPk(o.id),p=await l.findByPk(d.id);Object(a.expect)(c).to.equal(null),Object(a.expect)(u).to.equal(null),Object(a.expect)(p).to.equal(null)}))}))})),describe("OAuth2 -> OAuth2Setter Controller",(function(){describe("Controller -> Get all",(function(){it("Admin API -> The objects retrieved equals the objects looked fori, with no association",(async function(){const e=Object(i.generateTestSetter)(),t=Object(i.generateTestSetter)(),n=await l.bulkCreate([e,t],{});Object(a.expect)(n[0]).to.deep.include(e),Object(a.expect)(n[1]).to.deep.include(t);const{id:s}=n[0],{id:o}=n[1],d=await r.OAuth2SetterController.all({}),c=d.find(e=>e.id===s),u=d.find(e=>e.id===o);a.assert.exists(c.id,"We shouldnt deep test inclusion of empty item"),a.assert.exists(u.id,"We shouldnt deep test inclusion of empty item"),Object(a.expect)(c).to.deep.include(e),Object(a.expect)(u).to.deep.include(t),n.forEach(e=>e.destroy())})),it("Admin API -> The objects retrieved equals the objects looked for, including associations",(async function(){const e=await d.model.create(d.generateData(),{plain:!0}),t=await d.model.create(d.generateData(),{plain:!0}),n=Object(i.generateTestSetter)({[d.foreignKey]:e[d.references]}),s=Object(i.generateTestSetter)({[d.foreignKey]:t[d.references]}),o=await l.bulkCreate([n,s],{});Object(a.expect)(o[0]).to.deep.include(n),Object(a.expect)(o[1]).to.deep.include(s);const{id:c}=o[0],{id:u}=o[1],p=await r.OAuth2SetterController.all({}),y=p.find(e=>e.id===c),g=p.find(e=>e.id===u);a.assert.exists(y.id,"We shouldnt deep test inclusion of empty item"),a.assert.exists(g.id,"We shouldnt deep test inclusion of empty item"),Object(a.expect)(y).to.deep.include({...n,[d.as]:e.dataValues}),Object(a.expect)(g).to.deep.include({...s,[d.as]:t.dataValues}),o.forEach(e=>e.destroy()),e.destroy(),t.destroy()}))})),describe("Controller -> Get one",(function(){it("Admin API -> The object retrieved correspond to the objects looked for, with no association",(async function(){const e=Object(i.generateTestSetter)(),{id:t}=await l.create(e),n=await r.OAuth2SetterController.get({},{id:t});Object(a.expect)(n).to.deep.include({id:t,...e}),n.destroy()})),it("Admin API -> The object retrieved correspond to the objects looked for, including associations",(async function(){const e=await d.model.create(d.generateData(),{plain:!0}),t=Object(i.generateTestSetter)({[d.foreignKey]:e[d.references]}),{id:n}=await l.create(t),s=await r.OAuth2SetterController.get({},{id:n});Object(a.expect)(s).to.deep.include({id:n,...t}),Object(a.expect)(s[d.as].dataValues).to.deep.include(e.dataValues),s.destroy(),e.destroy()}))})),describe("Controller -> Add",(function(){it("Admin API -> The object created equals the specs given, with no association",(async function(){const e=Object(i.generateTestSetter)(),t=await r.OAuth2SetterController.add({},{input:e});Object(a.expect)(t).to.deep.include(e),t.destroy()})),it("Admin API -> The object created equals the specs given, including associations",(async function(){const e=await d.model.create(d.generateData(),{plain:!0}),t=Object(i.generateTestSetter)({[d.foreignKey]:e[d.references]}),n=await r.OAuth2SetterController.add({},{input:t});Object(a.expect)(n).to.deep.include(t),n.destroy(),e.destroy()}))})),describe("Controller -> Update",(function(){it("Admin API -> The object is successfully updated, with no association",(async function(){const e=Object(i.generateTestSetter)(),{id:t}=await l.create(e),n=Object(i.generateTestSetter)(),s=await r.OAuth2SetterController.update({},{id:t,input:n});Object(a.expect)(s).to.deep.include({id:t,...n}),s.destroy()})),it("Admin API -> The object is successfully updated, with associations",(async function(){const e=await d.model.create(d.generateData(),{plain:!0}),t=Object(i.generateTestSetter)({[d.foreignKey]:e[d.references]}),{id:n}=await l.create(t),s=Object(i.generateTestSetter)(),o=await r.OAuth2SetterController.update({},{id:n,input:s});Object(a.expect)(o).to.deep.include({id:n,...s}),o.destroy(),e.destroy()}))})),describe("Controller -> Delete",(function(){it("Admin API -> The object is successfully deleted",(async function(){const e=Object(i.generateTestSetter)(),{id:t}=await l.create(e),n=await r.OAuth2SetterController.delete({},{id:t});Object(a.assert)(n===t,"The controller should respond true to the deletion command"),await l.findByPk(t,{transaction:null});const s=await l.findByPk(t,{transaction:null});Object(a.expect)(s).to.equal(null)}))}))}))},function(e,t){e.exports={up:async function(e,t){return e.createTable("website_domains",{id:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},name:{type:t.DataTypes.STRING,allowNull:!1,unique:!0},alt:{type:t.DataTypes.STRING,allowNull:!1,unique:!0},isOrdered:{type:t.DataTypes.BOOLEAN,allowNull:!1},isBought:{type:t.DataTypes.BOOLEAN,allowNull:!1},isInstalled:{type:t.DataTypes.BOOLEAN,allowNull:!1},isError:{type:t.DataTypes.BOOLEAN,allowNull:!1},vercelNameservers:{type:t.DataTypes.JSON},vercelTeamId:{type:t.DataTypes.STRING},vercelDomainId:{type:t.DataTypes.STRING},createdAt:{type:t.DataTypes.DATE,allowNull:!1},updatedAt:{type:t.DataTypes.DATE,allowNull:!1}})},down:async function(e,t){return e.dropTable("website_domains")}}},function(e,t){e.exports={up:async function(e,t){return e.createTable("website_pages",{id:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},name:{type:t.DataTypes.STRING,allowNull:!1},slug:{type:t.DataTypes.STRING,allowNull:!0},metaData:{type:t.DataTypes.JSON},data:{type:t.DataTypes.JSON},createdAt:{type:t.DataTypes.DATE,allowNull:!1},updatedAt:{type:t.DataTypes.DATE,allowNull:!1}})},down:async function(e,t){return e.dropTable("website_pages")}}},function(e,t){e.exports={up:async function(e,t){return e.createTable("websites",{id:{type:t.DataTypes.UUID,allowNull:!1,primaryKey:!0},name:{type:t.DataTypes.STRING,allowNull:!1},createdAt:{type:t.DataTypes.DATE,allowNull:!1},updatedAt:{type:t.DataTypes.DATE,allowNull:!1},data:{type:t.DataTypes.JSON}})},down:async function(e,t){return e.dropTable("websites")}}},function(e,t){e.exports={up:async function(e,t){return e.addColumn("website_pages","siteId",{type:t.DataTypes.UUID,references:{model:"websites",key:"id"},onUpdate:"CASCADE",onDelete:"CASCADE"})},down:async function(e,t){return e.removeColumn("website_pages","siteId")}}},function(e,t){e.exports={up:async function(e,t){return e.addColumn("websites","domainName",{type:t.DataTypes.STRING,references:{model:"website_domains",key:"name"},onUpdate:"CASCADE",onDelete:"SET NULL"})},down:async function(e,t){return e.removeColumn("websites","domainName")}}},function(e,t){e.exports={up:async function(e,t){return e.addIndex("website_pages",{name:"website_pages_slug_siteId",fields:["slug","siteId"],unique:!0})},down:async function(e,t){return e.removeIndex("website_pages","website_pages_slug_siteId")}}},function(e,t,n){"use strict";n.r(t);var a=n(6),r=n(4),s=n(2),i=n(11),o=n(1),l=n.n(o),d=n(19),c=n.n(d),u=n(5);l.a.use(c.a);const{assert:p,expect:y}=l.a,g=r.default.Domain,m=()=>"auto-testing-available-domain"+s.random.alphaNumeric(8).toLowerCase()+".com";describe("Website -> Domain Model",(function(){describe("Domain Model -> Virtual -> Added To Vercel ( Boolean )",(function(){it("Model API -> The model is added to Vercel, should return true",(async function(){const e=Object(u.generateTestDomain)({vercelDomainId:"someid"}),t=await g.create(e);y(t.isAddedToVercel).to.equal(!0),t.destroy()})),it("Model API -> The model is not added to Vercel, should return false",(async function(){const e=Object(u.generateTestDomain)({vercelDomainId:""}),t=await g.create(e);y(t.isAddedToVercel).to.equal(!1),t.destroy()}))})),describe("Domain Model -> Virtual -> Main",(function(){it("Model API -> The domain is not installed, main should be the alt",(async function(){const e=Object(u.generateTestDomain)({isInstalled:!1}),t=await g.create(e);y(t.main).to.equal(e.alt),t.destroy()})),it("Model API -> The domain is installed, main should be the regular name",(async function(){const e=Object(u.generateTestDomain)({isInstalled:!0}),t=await g.create(e);y(t.main).to.equal(e.name),t.destroy()}))})),describe("Domain Model -> Class Method -> Is Available",(function(){it("Model API -> A domain that should be available for sale",(async function(){const e=m(),t=await g.isAvailable(e);y(t).to.equal(!0)}))})),describe("Domain Model -> Instance Method -> Order",(function(){it("Model API -> The domain gets its ordered status toggled, and is connected to the ordering api",(async function(){const e=Object(u.generateTestDomain)({name:m(),vercelDomainId:null,isOrdered:!1,isError:!1}),t=await g.create(e),n=(await t.addToVercel(),await t.order());y(n).to.be.equal(!0);const r=await a.DomainController.get({},{id:t.id});y(r.isOrdered).to.equal(!0),t.destroy()}))})),describe("Domain Model -> Instance Method -> Add To Vercel",(function(){it("Model API -> The domain should be added to Vercel",(async function(){const e=Object(u.generateTestDomain)({name:m(),vercelDomainId:null,isOrdered:!0,isBought:!0,isInstalled:!0}),t=await g.create(e),n=await t.addToVercel();y(n).to.equal(!0);const r=await a.DomainController.get({},{id:t.id});y(r.isInstalled).to.equal(!1);const{domain:{id:s}}=await i.VercelAPI.get.domain({name:e.name,teamId:e.vercelTeamId});y(s).to.equal(r.vercelDomainId),t.destroy()})),it("Model API -> The domain should not be synced with vercel because it already has been",(async function(){const e=Object(u.generateTestDomain)({vercelDomainId:"already existing id"}),t=await g.create(e),n=await t.addToVercel();y(n).to.equal(!1),t.destroy()}))})),describe("Domain Model -> Instance Method -> Delete from Vercel",(function(){it("Model API -> The domain should be deleted from vercel",(async function(){const e=Object(u.generateTestDomain)({name:m(),vercelDomainId:null,isOrdered:!0,isBought:!0,isInstalled:!0}),t=await g.create(e),n=(await t.addToVercel(),await t.deleteFromVercel());y(n).to.equal(!0);const r=await a.DomainController.get({},{id:t.id});y(r.isInstalled).to.equal(!1),y(r.vercelDomainId).to.equal(null);const s=i.VercelAPI.get.domain({name:e.name,teamId:e.vercelTeamId}),o=y(s).to.eventually.be.rejected.then(e=>{y(e.error.error.code).to.be.equal("not_found")});return t.destroy(),o}))})),describe("Domain Model -> Instance Method -> Get Domain Info Vercel",(function(){it("Model API -> We should get the right info from vercel with a synced domain",(async function(){const e=Object(u.generateTestDomain)({name:m(),vercelDomainId:null,isOrdered:!0,isBought:!0,isInstalled:!0}),t=await g.create(e),n=(await t.addToVercel(),await a.DomainController.get({},{id:t.id})),{id:r}=await n.getInfoFromVercel();y(r).to.equal(n.vercelDomainId),t.destroy()}))})),describe("Domain Model -> Hook -> Delete from Vercel",(function(){it("Model API -> The domain should be automatically deleted from vercel before instance deletion",(async function(){const e=Object(u.generateTestDomain)({name:m(),vercelDomainId:null,isOrdered:!0,isBought:!0,isInstalled:!0}),t=await g.create(e);await t.addToVercel(),await t.destroy();const n=i.VercelAPI.get.domain({name:e.name,teamId:e.vercelTeamId});return y(n).to.eventually.be.rejected.then(e=>{y(e.error.error.code).to.be.equal("not_found")})}))}))})),describe("Website -> Domain Controller",(function(){describe("Controller -> Get all",(function(){it("Admin API -> The objects retrieved equals the objects looked for",(async function(){const e=Object(u.generateTestDomain)(),t=Object(u.generateTestDomain)(),n=await g.bulkCreate([e,t],{});y(n[0]).to.deep.include(e),y(n[1]).to.deep.include(t);const{id:r}=n[0],{id:s}=n[1],i=await a.DomainController.all({}),o=i.find(e=>e.id===r),l=i.find(e=>e.id===s);p.exists(o.id,"We shouldnt deep test inclusion of empty item"),p.exists(l.id,"We shouldnt deep test inclusion of empty item"),y(o).to.deep.include(e),y(l).to.deep.include(t),n.forEach(e=>e.destroy())}))})),describe("Controller -> Get one",(function(){it("Admin API -> The object retrieved correspond to the objects looked for",(async function(){const e=Object(u.generateTestDomain)(),{id:t}=await g.create(e),n=await a.DomainController.get({},{id:t});y(n).to.deep.include({id:t,...e}),n.destroy()}))})),describe("Controller -> Add",(function(){it("Admin API -> The object created equals the specs given",(async function(){const e=Object(u.generateTestDomain)(),t=await a.DomainController.add({},{input:e});y(t).to.deep.include(e),t.destroy()}))})),describe("Controller -> Update",(function(){it("Admin API -> The object is successfully updated",(async function(){const e=Object(u.generateTestDomain)(),{id:t}=await g.create(e),n=Object(u.generateTestDomain)(),r=await a.DomainController.update({},{id:t,input:n});y(r).to.deep.include({id:t,...n}),r.destroy()}))})),describe("Controller -> Delete",(function(){it("Admin API -> The object is successfully deleted",(async function(){const e=Object(u.generateTestDomain)(),{id:t}=await g.create(e),n=await a.DomainController.delete({},{id:t});p(n===t,"The controller should respond true to the deletion command"),await g.findByPk(t,{transaction:null});const r=await g.findByPk(t,{transaction:null});y(r).to.equal(null)}))}))}))},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n(6),s=n(4),i=(n(2),n(5));const o=s.default.Page,l={generateData:()=>Object(i.generateTestSite)(),model:s.default.Site,foreignKey:"siteId",references:"id",as:"website"};describe("Website -> Page Model",(function(){})),describe("Website -> Page Controller",(function(){describe("Controller -> Get all",(function(){it("Admin API -> The objects retrieved equals the objects looked for, with no association",(async function(){const e=Object(i.generateTestPage)(),t=Object(i.generateTestPage)(),n=await o.bulkCreate([e,t],{});Object(a.expect)(n[0]).to.deep.include(e),Object(a.expect)(n[1]).to.deep.include(t);const{id:s}=n[0],{id:l}=n[1],d=await r.PageController.all({}),c=d.find(e=>e.id===s),u=d.find(e=>e.id===l);a.assert.exists(c.id,"We shouldnt deep test inclusion of empty item"),a.assert.exists(u.id,"We shouldnt deep test inclusion of empty item"),Object(a.expect)(c).to.deep.include(e),Object(a.expect)(u).to.deep.include(t),n.forEach(e=>e.destroy())})),it("Admin API -> The objects retrieved equals the objects looked for, including associations",(async function(){const e=await l.model.create(l.generateData(),{plain:!0}),t=await l.model.create(l.generateData(),{plain:!0}),n=Object(i.generateTestPage)({[l.foreignKey]:e[l.references]}),s=Object(i.generateTestPage)({[l.foreignKey]:t[l.references]}),d=await o.bulkCreate([n,s],{});Object(a.expect)(d[0]).to.deep.include(n),Object(a.expect)(d[1]).to.deep.include(s);const{id:c}=d[0],{id:u}=d[1],p=await r.PageController.all({}),y=p.find(e=>e.id===c),g=p.find(e=>e.id===u);a.assert.exists(y.id,"We shouldnt deep test inclusion of empty item"),a.assert.exists(g.id,"We shouldnt deep test inclusion of empty item"),Object(a.expect)(y).to.deep.include({...n,[l.as]:e.dataValues}),Object(a.expect)(g).to.deep.include({...s,[l.as]:t.dataValues}),d.forEach(e=>e.destroy()),e.destroy(),t.destroy()}))})),describe("Controller -> Get one",(function(){it("Admin API -> The object retrieved correspond to the objects looked for, with no association",(async function(){const e=Object(i.generateTestPage)(),{id:t}=await o.create(e),n=await r.PageController.get({},{id:t});Object(a.expect)(n).to.deep.include({id:t,...e}),n.destroy()})),it("Admin API -> The object retrieved correspond to the objects looked for, including associations",(async function(){const e=await l.model.create(l.generateData(),{plain:!0}),t=Object(i.generateTestPage)({[l.foreignKey]:e[l.references]}),{id:n}=await o.create(t),s=await r.PageController.get({},{id:n});Object(a.expect)(s).to.deep.include({id:n,...t}),Object(a.expect)(s[l.as].dataValues).to.deep.include(e.dataValues),s.destroy(),e.destroy()}))})),describe("Controller -> Add",(function(){it("Admin API -> The object created equals the specs given, with no association",(async function(){const e=Object(i.generateTestPage)(),t=await r.PageController.add({},{input:e});Object(a.expect)(t).to.deep.include(e),t.destroy()})),it("Admin API -> The object created equals the specs given, including associations",(async function(){const e=await l.model.create(l.generateData(),{plain:!0}),t=Object(i.generateTestPage)({[l.foreignKey]:e[l.references]}),n=await r.PageController.add({},{input:t});Object(a.expect)(n).to.deep.include(t),n.destroy(),e.destroy()}))})),describe("Controller -> Update",(function(){it("Admin API -> The object is successfully updated, with no association",(async function(){const e=Object(i.generateTestPage)(),{id:t}=await o.create(e),n=Object(i.generateTestPage)(),s=await r.PageController.update({},{id:t,input:n});Object(a.expect)(s).to.deep.include({id:t,...n}),s.destroy()})),it("Admin API -> The object is successfully updated, with associations",(async function(){const e=await l.model.create(l.generateData(),{plain:!0}),t=Object(i.generateTestPage)({[l.foreignKey]:e[l.references]}),{id:n}=await o.create(t),s=Object(i.generateTestPage)(),d=await r.PageController.update({},{id:n,input:s});Object(a.expect)(d).to.deep.include({id:n,...s}),d.destroy(),e.destroy()}))})),describe("Controller -> Delete",(function(){it("Admin API -> The object is successfully deleted",(async function(){const e=Object(i.generateTestPage)(),{id:t}=await o.create(e),n=await r.PageController.delete({},{id:t});Object(a.assert)(n===t,"The controller should respond true to the deletion command"),await o.findByPk(t,{transaction:null});const s=await o.findByPk(t,{transaction:null});Object(a.expect)(s).to.equal(null)}))}))}))},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n(6),s=n(4),i=(n(2),n(5));const o=s.default.Site,l={generateData:()=>Object(i.generateTestDomain)(),model:s.default.Domain,foreignKey:"domainName",references:"name",as:"domain"};describe("Website -> Site Model",(function(){})),describe("Website -> Site Controller",(function(){describe("Controller -> Get all",(function(){it("Admin API -> The objects retrieved equals the objects looked for, with no association",(async function(){const e=Object(i.generateTestSite)(),t=Object(i.generateTestSite)(),n=await o.bulkCreate([e,t],{});Object(a.expect)(n[0]).to.deep.include(e),Object(a.expect)(n[1]).to.deep.include(t);const{id:s}=n[0],{id:l}=n[1],d=await r.SiteController.all({}),c=d.find(e=>e.id===s),u=d.find(e=>e.id===l);a.assert.exists(c.id,"We shouldnt deep test inclusion of empty item"),a.assert.exists(u.id,"We shouldnt deep test inclusion of empty item"),Object(a.expect)(c).to.deep.include(e),Object(a.expect)(u).to.deep.include(t),n.forEach(e=>e.destroy())})),it("Admin API -> The objects retrieved equals the objects looked for, including associations",(async function(){const e=await l.model.create(l.generateData(),{plain:!0}),t=await l.model.create(l.generateData(),{plain:!0}),n=Object(i.generateTestSite)({[l.foreignKey]:e[l.references]}),s=Object(i.generateTestSite)({[l.foreignKey]:t[l.references]}),d=await o.bulkCreate([n,s],{});Object(a.expect)(d[0]).to.deep.include(n),Object(a.expect)(d[1]).to.deep.include(s);const{id:c}=d[0],{id:u}=d[1],p=await r.SiteController.all({}),y=p.find(e=>e.id===c),g=p.find(e=>e.id===u);a.assert.exists(y.id,"We shouldnt deep test inclusion of empty item"),a.assert.exists(g.id,"We shouldnt deep test inclusion of empty item"),Object(a.expect)(y).to.deep.include({...n,[l.as]:e.dataValues}),Object(a.expect)(g).to.deep.include({...s,[l.as]:t.dataValues}),d.forEach(e=>e.destroy()),e.destroy(),t.destroy()}))})),describe("Controller -> Get one",(function(){it("Admin API -> The object retrieved correspond to the objects looked for, with no association",(async function(){const e=Object(i.generateTestSite)(),{id:t}=await o.create(e),n=await r.SiteController.get({},{id:t});Object(a.expect)(n).to.deep.include({id:t,...e}),n.destroy()})),it("Admin API -> The object retrieved correspond to the objects looked for, including associations",(async function(){const e=await l.model.create(l.generateData(),{plain:!0}),t=Object(i.generateTestSite)({[l.foreignKey]:e[l.references]}),{id:n}=await o.create(t),s=await r.SiteController.get({},{id:n});Object(a.expect)(s).to.deep.include({id:n,...t}),Object(a.expect)(s[l.as].dataValues).to.deep.include(e.dataValues),s.destroy(),e.destroy()}))})),describe("Controller -> Add",(function(){it("Admin API -> The object created equals the specs given, with no association",(async function(){const e=Object(i.generateTestSite)(),t=await r.SiteController.add({},{input:e});Object(a.expect)(t).to.deep.include(e),t.destroy()})),it("Admin API -> The object created equals the specs given, including associations",(async function(){const e=await l.model.create(l.generateData(),{plain:!0}),t=Object(i.generateTestSite)({[l.foreignKey]:e[l.references]}),n=await r.SiteController.add({},{input:t});Object(a.expect)(n).to.deep.include(t),n.destroy(),e.destroy()}))})),describe("Controller -> Update",(function(){it("Admin API -> The object is successfully updated, with no association",(async function(){const e=Object(i.generateTestSite)(),{id:t}=await o.create(e),n=Object(i.generateTestSite)(),s=await r.SiteController.update({},{id:t,input:n});Object(a.expect)(s).to.deep.include({id:t,...n}),s.destroy()})),it("Admin API -> The object is successfully updated, with associations",(async function(){const e=await l.model.create(l.generateData(),{plain:!0}),t=Object(i.generateTestSite)({[l.foreignKey]:e[l.references]}),{id:n}=await o.create(t),s=Object(i.generateTestSite)(),d=await r.SiteController.update({},{id:n,input:s});Object(a.expect)(d).to.deep.include({id:n,...s}),d.destroy(),e.destroy()}))})),describe("Controller -> Delete",(function(){it("Admin API -> The object is successfully deleted",(async function(){const e=Object(i.generateTestSite)(),{id:t}=await o.create(e),n=await r.SiteController.delete({},{id:t});Object(a.assert)(n===t,"The controller should respond true to the deletion command"),await o.findByPk(t,{transaction:null});const s=await o.findByPk(t,{transaction:null});Object(a.expect)(s).to.equal(null)}))}))}))},function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),s=n(19),i=n.n(s),o=n(2),l=(n(219),n(11));r.a.use(i.a);const{assert:d,expect:c}=r.a,u=process.env.VERCEL_TEAM_ID,p=process.env.VERCEL_TEST_DOMAIN_PERSONAL,y=process.env.VERCEL_TEST_DOMAIN_TEAM,g=()=>"auto-testing-available-domain"+o.random.alphaNumeric(8).toLowerCase()+".com";describe("Website -> Vercel API",(function(){before((function(){d(process.env.VERCEL_API_SECRET,"Env var VERCEL_API_SECRET is not configured")})),describe("API -> Get",(function(){it("Get -> Teams -> Should display the teams we're part of",(async function(){const e=await l.VercelAPI.get.teams();d("teams"in e,"response should provide the teams as a key")})),describe("Get -> All Domains",(function(){it("Get -> Domains (User) -> Should list all available domains correctly owned by the user",(async function(){const e=(await l.VercelAPI.get.domains()).domains.find(e=>e.name===p);d(e,"Personal domain should be found in the api response")})),it("Get -> Domains (Team) -> Should list all available domains correctly owned by the team",(async function(){const e=(await l.VercelAPI.get.domains({teamId:u})).domains.find(e=>e.name===y);d(e,"Team domain should be found in the api response")}))})),describe("Get -> Single Domain",(function(){it("Get -> Domain (User) -> Should retrieve info of a specific domain owned by the account",(async function(){const e=p,t=await l.VercelAPI.get.domain({name:e});d(t.domain.name===e,"Retrieved domain should equal provided domain")})),it("Get -> Domain (Team) -> Should retrieve info of a specific domain owned by the team",(async function(){const e=y,t=await l.VercelAPI.get.domain({name:e,teamId:u});d(t.domain.name===e,"Retrieved team-owned domain should equal provided domain")}))})),it("Get -> Is Domain Available -> Tell correctly tell whether a domain is available",(async function(){const e=g(),{available:t}=await l.VercelAPI.get.isDomainAvailable("google.com"),{available:n}=await l.VercelAPI.get.isDomainAvailable(e);d(!1===t,"Domain google.com should be taken"),d(!0===n,`Domain ${e} should be available`)}))})),describe("API -> Post",(function(){describe("Post -> Add a domain",(function(){it("Post -> Add Domain (User) -> Should correctly add a domain to the user account",(async function(){const e=g(),{domain:t}=await l.VercelAPI.post.addDomain({},{name:e});d(t.name===e,"The added domain should be the requested domain"),await l.VercelAPI.delete.domain({name:e})})),it("Post -> Add Domain (Team) -> Should correctly add a domain to the team account",(async function(){const e=g(),{domain:t}=await l.VercelAPI.post.addDomain({teamId:u},{name:e});d(t.name===e,"The added domain should be the requested domain"),await l.VercelAPI.delete.domain({name:e,teamId:u})}))})),describe("Post -> Verify a domain",(function(){it("Post -> Verify Domain (Team) -> The domain hasnt been set up properly so it should return an error",(async function(){const e=g(),{domain:t}=await l.VercelAPI.post.addDomain({teamId:u},{name:e}),n=l.VercelAPI.post.verifyDomain({name:e,teamId:u});return c(n).to.eventually.be.rejected.then(t=>{c(t.error.error.code).to.be.equal("verification_failed"),l.VercelAPI.delete.domain({name:e,teamId:u})})}))}))})),describe("API -> Delete",(function(){it("Delete -> Domain",(async function(){const e=g(),{domain:t}=await l.VercelAPI.post.addDomain({teamId:u},{name:e}),{uid:n}=await l.VercelAPI.delete.domain({name:e,teamId:u});d(n===t.id,"The deleted item should be the same that was created just before")}))}))}))},function(e,t){e.exports=require("nodemailer")},function(e,t){e.exports=require("googleapis")},function(e,t){e.exports=require("graphql-tools")},function(e,t){e.exports=require("apollo-server-express")},function(e,t){e.exports=require("apollo-cache-control")},function(e,t,n){e.exports=n(225)},function(e,t){e.exports=require("dotenv")},function(e,t){e.exports=require("tls")},function(e,t,n){var a={"./auth/models":49,"./business/models":50,"./car/models":51,"./dictionary/models":52,"./food/models":53,"./oauth2/models":54,"./website/models":26};function r(e){var t=s(e);return n(t)}function s(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=s,e.exports=r,r.id=195},function(e,t,n){var a={"./auth":72,"./auth/":72,"./auth/controllers":7,"./auth/controllers/":7,"./auth/controllers/Token":77,"./auth/controllers/Token.js":77,"./auth/controllers/User":74,"./auth/controllers/User.js":74,"./auth/controllers/index":7,"./auth/controllers/index.js":7,"./auth/dependencies":73,"./auth/dependencies.json":73,"./auth/index":72,"./auth/index.js":72,"./auth/migrations/00_auth_tokens_initial.migration":143,"./auth/migrations/00_auth_tokens_initial.migration.js":143,"./auth/migrations/00_auth_users_initial.migration":144,"./auth/migrations/00_auth_users_initial.migration.js":144,"./auth/migrations/01_auth_tokens_association_users.migration":145,"./auth/migrations/01_auth_tokens_association_users.migration.js":145,"./auth/migrations/template":146,"./auth/migrations/template.js":146,"./auth/migrations/x01_auth_tokens_association_.migration.xjs":197,"./auth/migrations/x02_auth_tokens_index_.migration.xjs":198,"./auth/models":49,"./auth/models/":49,"./auth/models/Token":58,"./auth/models/Token.js":58,"./auth/models/User":56,"./auth/models/User.js":56,"./auth/models/index":49,"./auth/models/index.js":49,"./auth/passport":118,"./auth/passport.js":118,"./auth/resolvers":30,"./auth/resolvers/":30,"./auth/resolvers/Token":138,"./auth/resolvers/Token.js":138,"./auth/resolvers/User":121,"./auth/resolvers/User.js":121,"./auth/resolvers/hello":147,"./auth/resolvers/hello.js":147,"./auth/resolvers/index":30,"./auth/resolvers/index.js":30,"./auth/tests/Token.test":148,"./auth/tests/Token.test.js":148,"./auth/tests/User.test":149,"./auth/tests/User.test.js":149,"./auth/tests/generators":9,"./auth/tests/generators/":9,"./auth/tests/generators/Token":78,"./auth/tests/generators/Token.js":78,"./auth/tests/generators/User":79,"./auth/tests/generators/User.js":79,"./auth/tests/generators/index":9,"./auth/tests/generators/index.js":9,"./auth/types":29,"./auth/types/":29,"./auth/types/Token.graphql":199,"./auth/types/User.graphql":200,"./auth/types/_stitch.graphql":201,"./auth/types/index":29,"./auth/types/index.js":29,"./auth/utils":44,"./auth/utils/":44,"./auth/utils/getTokenFor":57,"./auth/utils/getTokenFor.js":57,"./auth/utils/index":44,"./auth/utils/index.js":44,"./auth/validation":27,"./auth/validation/":27,"./auth/validation/index":27,"./auth/validation/index.js":27,"./auth/validation/login":75,"./auth/validation/login.js":75,"./auth/validation/signup":76,"./auth/validation/signup.js":76,"./business":80,"./business/":80,"./business/controllers":15,"./business/controllers/":15,"./business/controllers/Shop":82,"./business/controllers/Shop.js":82,"./business/controllers/index":15,"./business/controllers/index.js":15,"./business/dependencies":81,"./business/dependencies.json":81,"./business/index":80,"./business/index.js":80,"./business/migrations/00_business_shops_initial.migration":150,"./business/migrations/00_business_shops_initial.migration.js":150,"./business/migrations/01_business_shops_association_auth_users.migration":151,"./business/migrations/01_business_shops_association_auth_users.migration.js":151,"./business/migrations/01_business_shops_association_website_sites.migration":152,"./business/migrations/01_business_shops_association_website_sites.migration.js":152,"./business/migrations/02_business_shops_index_name_city.migration":153,"./business/migrations/02_business_shops_index_name_city.migration.js":153,"./business/models":50,"./business/models/":50,"./business/models/Shop":59,"./business/models/Shop.js":59,"./business/models/index":50,"./business/models/index.js":50,"./business/resolvers":32,"./business/resolvers/":32,"./business/resolvers/Shop":122,"./business/resolvers/Shop.js":122,"./business/resolvers/index":32,"./business/resolvers/index.js":32,"./business/tests/Shop.test":154,"./business/tests/Shop.test.js":154,"./business/tests/generators":17,"./business/tests/generators/":17,"./business/tests/generators/Shop":83,"./business/tests/generators/Shop.js":83,"./business/tests/generators/index":17,"./business/tests/generators/index.js":17,"./business/types":31,"./business/types/":31,"./business/types/Shop.graphql":202,"./business/types/_stitch.graphql":203,"./business/types/index":31,"./business/types/index.js":31,"./car":87,"./car/":87,"./car/controllers":12,"./car/controllers/":12,"./car/controllers/Make":90,"./car/controllers/Make.js":90,"./car/controllers/Service":89,"./car/controllers/Service.js":89,"./car/controllers/index":12,"./car/controllers/index.js":12,"./car/dependencies":88,"./car/dependencies.json":88,"./car/index":87,"./car/index.js":87,"./car/migrations/00_car_makes_initial.migration":155,"./car/migrations/00_car_makes_initial.migration.js":155,"./car/migrations/00_car_services_initial.migration":156,"./car/migrations/00_car_services_initial.migration.js":156,"./car/models":51,"./car/models/":51,"./car/models/Make":61,"./car/models/Make.js":61,"./car/models/Make.old":157,"./car/models/Make.old.js":157,"./car/models/Service":60,"./car/models/Service.js":60,"./car/models/Service.old":158,"./car/models/Service.old.js":158,"./car/models/index":51,"./car/models/index.js":51,"./car/resolvers":34,"./car/resolvers/":34,"./car/resolvers/Make":124,"./car/resolvers/Make.js":124,"./car/resolvers/Service":123,"./car/resolvers/Service.js":123,"./car/resolvers/index":34,"./car/resolvers/index.js":34,"./car/tests/Make.test":159,"./car/tests/Make.test.js":159,"./car/tests/Service.test":160,"./car/tests/Service.test.js":160,"./car/tests/generators":16,"./car/tests/generators/":16,"./car/tests/generators/Make":91,"./car/tests/generators/Make.js":91,"./car/tests/generators/Service":92,"./car/tests/generators/Service.js":92,"./car/tests/generators/index":16,"./car/tests/generators/index.js":16,"./car/types":33,"./car/types/":33,"./car/types/Make.graphql":204,"./car/types/Service.graphql":205,"./car/types/_stitch.graphql":206,"./car/types/index":33,"./car/types/index.js":33,"./dictionary":93,"./dictionary/":93,"./dictionary/controllers":8,"./dictionary/controllers/":8,"./dictionary/controllers/Author":96,"./dictionary/controllers/Author.js":96,"./dictionary/controllers/Expression":95,"./dictionary/controllers/Expression.js":95,"./dictionary/controllers/Tag":97,"./dictionary/controllers/Tag.js":97,"./dictionary/controllers/index":8,"./dictionary/controllers/index.js":8,"./dictionary/dependencies":94,"./dictionary/dependencies.json":94,"./dictionary/index":93,"./dictionary/index.js":93,"./dictionary/migrations/00_dictionary_authors_initial.migration":161,"./dictionary/migrations/00_dictionary_authors_initial.migration.js":161,"./dictionary/migrations/00_dictionary_expressions_initial.migration":162,"./dictionary/migrations/00_dictionary_expressions_initial.migration.js":162,"./dictionary/migrations/00_dictionary_tags_initial.migration":163,"./dictionary/migrations/00_dictionary_tags_initial.migration.js":163,"./dictionary/migrations/01_dictionary_expressions_association_authors.migration":164,"./dictionary/migrations/01_dictionary_expressions_association_authors.migration.js":164,"./dictionary/migrations/01_dictionary_nm_expressions_tags.migration":165,"./dictionary/migrations/01_dictionary_nm_expressions_tags.migration.js":165,"./dictionary/migrations/x02_dictionary_tags_index_.migration.xjs":207,"./dictionary/models":52,"./dictionary/models/":52,"./dictionary/models/Author":63,"./dictionary/models/Author.js":63,"./dictionary/models/Expression":62,"./dictionary/models/Expression.js":62,"./dictionary/models/Tag":64,"./dictionary/models/Tag.js":64,"./dictionary/models/index":52,"./dictionary/models/index.js":52,"./dictionary/resolvers":36,"./dictionary/resolvers/":36,"./dictionary/resolvers/Author":126,"./dictionary/resolvers/Author.js":126,"./dictionary/resolvers/Expression":127,"./dictionary/resolvers/Expression.js":127,"./dictionary/resolvers/Tag":125,"./dictionary/resolvers/Tag.js":125,"./dictionary/resolvers/index":36,"./dictionary/resolvers/index.js":36,"./dictionary/tests/Author.test":166,"./dictionary/tests/Author.test.js":166,"./dictionary/tests/Expression.test":167,"./dictionary/tests/Expression.test.js":167,"./dictionary/tests/Tag.test":168,"./dictionary/tests/Tag.test.js":168,"./dictionary/tests/generators":10,"./dictionary/tests/generators/":10,"./dictionary/tests/generators/Author":98,"./dictionary/tests/generators/Author.js":98,"./dictionary/tests/generators/Expression":99,"./dictionary/tests/generators/Expression.js":99,"./dictionary/tests/generators/Tag":100,"./dictionary/tests/generators/Tag.js":100,"./dictionary/tests/generators/index":10,"./dictionary/tests/generators/index.js":10,"./dictionary/types":35,"./dictionary/types/":35,"./dictionary/types/Author.graphql":208,"./dictionary/types/Expression.graphql":209,"./dictionary/types/Tag.graphql":210,"./dictionary/types/_stitch.graphql":211,"./dictionary/types/index":35,"./dictionary/types/index.js":35,"./food/controllers":20,"./food/controllers/":20,"./food/controllers/Fruit":101,"./food/controllers/Fruit.js":101,"./food/controllers/index":20,"./food/controllers/index.js":20,"./food/dependencies":169,"./food/dependencies.json":169,"./food/migrations/00_food_fruits_initial.migration":170,"./food/migrations/00_food_fruits_initial.migration.js":170,"./food/models":53,"./food/models/":53,"./food/models/Fruit":65,"./food/models/Fruit.js":65,"./food/models/index":53,"./food/models/index.js":53,"./food/resolvers":102,"./food/resolvers/":102,"./food/resolvers/Fruit":128,"./food/resolvers/Fruit.js":128,"./food/resolvers/index":102,"./food/resolvers/index.js":102,"./food/tests/Fruit.x":171,"./food/tests/Fruit.x.js":171,"./food/tests/generators":21,"./food/tests/generators/":21,"./food/tests/generators/Fruit":103,"./food/tests/generators/Fruit.js":103,"./food/tests/generators/index":21,"./food/tests/generators/index.js":21,"./food/types":104,"./food/types/":104,"./food/types/Fruit.graphql":212,"./food/types/_stitch.graphql":213,"./food/types/index":104,"./food/types/index.js":104,"./oauth2":105,"./oauth2/":105,"./oauth2/controllers":14,"./oauth2/controllers/":14,"./oauth2/controllers/Setter":108,"./oauth2/controllers/Setter.js":108,"./oauth2/controllers/index":14,"./oauth2/controllers/index.js":14,"./oauth2/dependencies":106,"./oauth2/dependencies.json":106,"./oauth2/index":105,"./oauth2/index.js":105,"./oauth2/migrations/00_oauth2_profiles_initial.migration":172,"./oauth2/migrations/00_oauth2_profiles_initial.migration.js":172,"./oauth2/migrations/00_oauth2_setters_initial.migration":173,"./oauth2/migrations/00_oauth2_setters_initial.migration.js":173,"./oauth2/migrations/01_oauth2_profiles_association_users.migration":174,"./oauth2/migrations/01_oauth2_profiles_association_users.migration.js":174,"./oauth2/migrations/01_oauth2_setters_association_users.migration":175,"./oauth2/migrations/01_oauth2_setters_association_users.migration.js":175,"./oauth2/models":54,"./oauth2/models/":54,"./oauth2/models/Profile":67,"./oauth2/models/Profile.js":67,"./oauth2/models/Setter":66,"./oauth2/models/Setter.js":66,"./oauth2/models/index":54,"./oauth2/models/index.js":54,"./oauth2/resolvers":38,"./oauth2/resolvers/":38,"./oauth2/resolvers/Setter":131,"./oauth2/resolvers/Setter.js":131,"./oauth2/resolvers/index":38,"./oauth2/resolvers/index.js":38,"./oauth2/resolvers/main":129,"./oauth2/resolvers/main.js":129,"./oauth2/router":132,"./oauth2/router.js":132,"./oauth2/strategies":23,"./oauth2/strategies/":23,"./oauth2/strategies/AccessManager":45,"./oauth2/strategies/AccessManager.js":45,"./oauth2/strategies/Google":39,"./oauth2/strategies/Google/":39,"./oauth2/strategies/Google/AccessManager":107,"./oauth2/strategies/Google/AccessManager.js":107,"./oauth2/strategies/Google/Config":130,"./oauth2/strategies/Google/Config.js":130,"./oauth2/strategies/Google/index":39,"./oauth2/strategies/Google/index.js":39,"./oauth2/strategies/index":23,"./oauth2/strategies/index.js":23,"./oauth2/tests/Setter.test":176,"./oauth2/tests/Setter.test.js":176,"./oauth2/tests/generators":13,"./oauth2/tests/generators/":13,"./oauth2/tests/generators/Setter":110,"./oauth2/tests/generators/Setter.js":110,"./oauth2/tests/generators/index":13,"./oauth2/tests/generators/index.js":13,"./oauth2/types":37,"./oauth2/types/":37,"./oauth2/types/Setter.graphql":214,"./oauth2/types/_stitch.graphql":215,"./oauth2/types/index":37,"./oauth2/types/index.js":37,"./oauth2/types/main.graphql":216,"./oauth2/utils":46,"./oauth2/utils/":46,"./oauth2/utils/GoogleAPI":109,"./oauth2/utils/GoogleAPI.js":109,"./oauth2/utils/index":46,"./oauth2/utils/index.js":46,"./tstr":111,"./tstr/":111,"./tstr/dependencies":112,"./tstr/dependencies.json":112,"./tstr/index":111,"./tstr/index.js":111,"./tstr/resolvers":41,"./tstr/resolvers/":41,"./tstr/resolvers/Hello":133,"./tstr/resolvers/Hello.js":133,"./tstr/resolvers/index":41,"./tstr/resolvers/index.js":41,"./tstr/types":40,"./tstr/types/":40,"./tstr/types/Hello.graphql":217,"./tstr/types/_stitch.graphql":218,"./tstr/types/index":40,"./tstr/types/index.js":40,"./website":113,"./website/":113,"./website/config":120,"./website/config.js":120,"./website/controllers":6,"./website/controllers/":6,"./website/controllers/Domain":115,"./website/controllers/Domain.js":115,"./website/controllers/Page":117,"./website/controllers/Page.js":117,"./website/controllers/Site":116,"./website/controllers/Site.js":116,"./website/controllers/index":6,"./website/controllers/index.js":6,"./website/dependencies":114,"./website/dependencies.json":114,"./website/index":113,"./website/index.js":113,"./website/migrations/00_website_domains_initial.migration":177,"./website/migrations/00_website_domains_initial.migration.js":177,"./website/migrations/00_website_pages_initial.migration":178,"./website/migrations/00_website_pages_initial.migration.js":178,"./website/migrations/00_website_websites_initial.migration":179,"./website/migrations/00_website_websites_initial.migration.js":179,"./website/migrations/01_website_pages_association_websites.migration":180,"./website/migrations/01_website_pages_association_websites.migration.js":180,"./website/migrations/01_website_websites_association_domains.migration":181,"./website/migrations/01_website_websites_association_domains.migration.js":181,"./website/migrations/02_website_pages_index_slug_site.migration":182,"./website/migrations/02_website_pages_index_slug_site.migration.js":182,"./website/models":26,"./website/models/":26,"./website/models/Domain":68,"./website/models/Domain.js":68,"./website/models/Page":71,"./website/models/Page.js":71,"./website/models/Site":70,"./website/models/Site.js":70,"./website/models/index":26,"./website/models/index.js":26,"./website/resolvers":43,"./website/resolvers/":43,"./website/resolvers/Domain":136,"./website/resolvers/Domain.js":136,"./website/resolvers/Page":134,"./website/resolvers/Page.js":134,"./website/resolvers/Site":135,"./website/resolvers/Site.js":135,"./website/resolvers/index":43,"./website/resolvers/index.js":43,"./website/tests/Domain.test":183,"./website/tests/Domain.test.js":183,"./website/tests/Page.test":184,"./website/tests/Page.test.js":184,"./website/tests/Site.test":185,"./website/tests/Site.test.js":185,"./website/tests/generators":5,"./website/tests/generators/":5,"./website/tests/generators/Domain":86,"./website/tests/generators/Domain.js":86,"./website/tests/generators/Page":84,"./website/tests/generators/Page.js":84,"./website/tests/generators/Site":85,"./website/tests/generators/Site.js":85,"./website/tests/generators/index":5,"./website/tests/generators/index.js":5,"./website/tests/utils.VercelAPI.test":186,"./website/tests/utils.VercelAPI.test.js":186,"./website/types":42,"./website/types/":42,"./website/types/Domain.graphql":220,"./website/types/Page.graphql":221,"./website/types/Site.graphql":222,"./website/types/_stitch.graphql":223,"./website/types/index":42,"./website/types/index.js":42,"./website/utils":11,"./website/utils/":11,"./website/utils/VercelAPI":69,"./website/utils/VercelAPI.js":69,"./website/utils/index":11,"./website/utils/index.js":11};function r(e){var t=s(e);return n(t)}function s(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=s,e.exports=r,r.id=196},function(e,t){e.exports={up:async function(e,t){return e.addColumn("","",{type:t.DataTypes.UUID,references:{model:"",key:"id"},onUpdate:"CASCADE",onDelete:"SET NULL"})},down:async function(e,t){return e.removeColumn("","")}}},function(e,t){e.exports={up:async function(e,t){return e.addIndex("",{name:"",fields:["slug","siteId"],unique:!0})},down:async function(e,t){return e.removeIndex("","")}}},function(e,t){throw new Error("Module parse failed: Unexpected token (1:5)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> type Token {\n|   id:ID!\n|   _string:String!")},function(e,t){throw new Error("Module parse failed: Unexpected token (1:7)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> extend type Query {\n|  \tallUsers: [User]!\n|  \tgetUser(id:ID!): User!")},function(e,t){throw new Error("Module parse failed: Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> #extend input TokenInput {\n|   #userId:ID\n|   #}")},function(e,t){throw new Error("Module parse failed: Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> # @fwrlines/generator-graphql-server-type 2.4.5 \n| extend type Query {\n|   allShops: [Shop]")},function(e,t){throw new Error("Module parse failed: Unexpected token (1:7)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> extend type User {\n|   shops:Shop\n| }")},function(e,t){throw new Error("Module parse failed: Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> # @fwrlines/generator-graphql-server-type 1.3.1 \n| extend type Query {\n|   allMakes: [Make]")},function(e,t){throw new Error("Module parse failed: Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> # @fwrlines/generator-graphql-server-type 1.3.1 \n| extend type Query {\n|   allServices: [Service]")},function(e,t){},function(e,t){e.exports={up:async function(e,t){return e.addIndex("",{name:"",fields:["slug","siteId"],unique:!0})},down:async function(e,t){return e.removeIndex("","")}}},function(e,t){throw new Error("Module parse failed: Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> # @fwrlines/generator-graphql-server-type 2.4.6 \n| extend type Query {\n|   allDictionaryAuthors: [DictionaryAuthor]")},function(e,t){throw new Error("Module parse failed: Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> # @fwrlines/generator-graphql-server-type 2.4.6 \n| extend type Query {\n|   allDictionaryExpressions: [DictionaryExpression]")},function(e,t){throw new Error("Module parse failed: Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> # @fwrlines/generator-graphql-server-type 2.4.6 \n| extend type Query {\n|   allDictionaryTags: [DictionaryTag]")},function(e,t){throw new Error("Module parse failed: Unexpected token (1:7)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> extend input DictionaryExpressionInput {\n|   authorId:ID\n| }")},function(e,t){throw new Error("Module parse failed: Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> # @fwrlines/generator-graphql-server-type 2.8.1 \n| extend type Query {\n|   allFruits: [Fruit]")},function(e,t){},function(e,t){throw new Error("Module parse failed: Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> # Generator version : 1.1.1\n| extend type Query {\n|   allSetters: [Setter]")},function(e,t){throw new Error("Module parse failed: Unexpected token (1:7)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> extend input SetterInput {\n|   userId:ID\n| }")},function(e,t){throw new Error("Module parse failed: Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> # Generator version : 1.1.2\n| extend type Query {\n|   oAuth2Google: String!")},function(e,t){throw new Error("Module parse failed: Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> # Generator version : 1.1.1\n| extend type Query {\n|   getSimpleHello: String")},function(e,t){},function(e,t){e.exports=require("request-promise-core/errors")},function(e,t){throw new Error("Module parse failed: Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> # @fwrlines/generator-graphql-server-type 2.1.1 \n| extend type Query {\n|   allDomains: [Domain]")},function(e,t){throw new Error("Module parse failed: Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> # @fwrlines/generator-graphql-server-type 2.1.1 \n| extend type Query {\n|   allPages: [Page]")},function(e,t){throw new Error("Module parse failed: Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> # @fwrlines/generator-graphql-server-type 2.1.1 \n| extend type Query {\n|   allSites: [Site]")},function(e,t){throw new Error("Module parse failed: Unexpected token (1:7)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> extend input SiteInput {\n|   domainName:String\n| }")},function(e,t){e.exports=require("helmet")},function(e,t,n){"use strict";n.r(t);n(141);var a=n(118),r=n(189),s=n(25),i=n.n(s);"true"===process.env.DEBUG&&console.log("LOADING => GraphQL Schema from :",i.a.installedApps);const o=[],l=[...["type Query {\n  _empty: String\n}\nenum CacheControlScope {\n  PUBLIC\n  PRIVATE\n}\n\ndirective @cacheControl (\n  maxAge: Int\n  scope: CacheControlScope\n) on FIELD_DEFINITION | OBJECT | INTERFACE\n","type Mutation {\n  _empty: String\n}\n"]],d=[];if(i.a.installedApps.forEach(e=>{const{dependencies:t,models:a,resolvers:r,types:s}=n(196)("./"+e);o.push({name:e,dependencies:t}),s&&l.push(...s),r&&d.push(...r)}),"true"===process.env.DEBUG){(()=>{o.forEach((e,t,n)=>{const a=n.slice(0,t);e.dependencies.reduce((t,n)=>{const r=!!a.find(e=>e.name===n);if(!r)throw new Error(`In package ${e.name}, dependency ${n} not is satisfied. Make sure that ${n} is correctly loaded and that ${n} is loaded before ${e.name}.`);return r?1*t:0*t},1)})})(),console.log(`OK => ${i.a.installedApps.length} apps loaded :`,i.a.installedApps)}var c=Object(r.makeExecutableSchema)({typeDefs:l,resolvers:d}),u=n(190),p=(n(119),n(47),n(139)),y=n.n(p),g=n(137),m=n.n(g),f=(n(224),n(132)),h=(n(140),n(191));process.env.LOCAL&&n(193).config();const{DEBUG:T,CORS:b,JWT_SECRET:w,PROFILE_NAME:S,SQL_LOGGING:D,AUTH_SIGNUP_ENABLED:I,MODE:v}=process.env;let A,j,O;const x="true"===T,_="true"===b;x&&(A={endpoint:"/graphql",settings:{"editor.theme":"dark"}},j=e=>(console.log("> > > ERROR"),console.log(e),console.log("> > > END OF ERROR"),e),O=e=>(console.log("> > > RESPONSE"),console.log(e),console.log("< < < END OF RESPONSE"),e));const N=new u.ApolloServer({schema:c,playground:A,cors:_,introspection:x,tracing:!0,debug:x,formatError:j,formatResponse:O,cacheControl:{},extensions:[()=>new h.CacheControlExtension({defaultMaxAge:604800,calculateHttpHeaders:!0})],context:async({req:e})=>{const t={};return t.user=e.user,t.headers=e.headers,t}}),P=y()();P.use("/",(e,t,n)=>{n()}),m.a.use(a.default),P.use(m.a.initialize()),P.use("/auth",f.default),P.use("/",(e,t,n)=>{m.a.authenticate("jwt",{session:!1},(t,a,r)=>{a&&(e.user=a),n()})(e,t,n)}),N.applyMiddleware({app:P}),P.listen({port:4e3},()=>{console.log(`OK => Loaded profile  ${S} in mode ${v}`),console.log("OK => DEBUG is "+T),console.log("OK => SQL_LOGGING is "+D),console.log("OK => AUTH_SIGNUP_AUTHORIZED is "+I),console.log("OK => Server ready at http://localhost:4000"+N.graphqlPath)})}]);