# @fwrlines/generator-graphql-server-type 2.4.6 
extend type Query {
  allDictionaryExpressions: [DictionaryExpression]
  getDictionaryExpression(id: ID!): DictionaryExpression!
  #paginatedDictionaryExpression (page:Int, category: String):PaginatedDictionaryExpressions
}

extend type Mutation {
  #Admin mutations
  addDictionaryExpression(input:DictionaryExpressionInput!): DictionaryExpression!
  updateDictionaryExpression(id: ID!, input: DictionaryExpressionInput!): DictionaryExpression!
  deleteDictionaryExpression(id: ID!): ID!

  #User mutations
  }

input DictionaryExpressionInput {
  name:String
  slug:String
  sourceName:String
  sourceLink:String
  date:Float
  location:String
  attributed:String
  definition:String
  usage:String
  isActive:Boolean
  #data:String
  }

type DictionaryExpression {
  id:ID!
  _string:String!
  name:String!
  slug:String!
  sourceName:String
  sourceLink:String
  date:Float
  location:String
  attributed:String
  definition:String
  usage:String
  isActive:Boolean!
  #data:String
  createdAt:Float!
  updatedAt:Float!
}

#type PaginatedDictionaryExpressions {
#  docs: [DictionaryExpression]
#  totalDocs: Int!
#  limit: Int!
#  hasPrevPage: Boolean!
#  hasNextPage: Boolean!
#  page: Int!
#  totalPages: Int!
#  pagingCounter: Int!
#  prevPage: Int
#  nextPage: Int
#}
